{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\Components\\\\Expenses\\\\AppExpenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./AppExpenses.css\";\nimport \"./ExpenseItem.css\";\nimport ExpensesFilter from \"../NewExpense/ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport ChartExpenses from \"../NewExpense/ChartExpenses\";\nimport ExpenseList from \"./ExpenseList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppExpenses(props) {\n  _s();\n  const [savedYear, setSavedYear] = useState(\"2023\");\n  const yearChangeHAndler = year => {\n    setSavedYear(year);\n  };\n\n  // let expenseContent = <p style={{ color: \"white\" }}>There is no elements found</p>\n\n  const yearFilter = props.items.filter(array => {\n    return array.date.getFullYear().toString() === savedYear;\n  });\n  {/* {yearFilter.length === 0 ? (\r\n          expenseContent\r\n        ) : (\r\n          yearFilter.map((e) => (\r\n            <ExpenseItem\r\n              title={e.title}               //second way. Writing more code, but a way simpler in understanding\r\n              amount={e.amount}\r\n              date={e.date}\r\n              key={e.id}\r\n            ></ExpenseItem>\r\n          ))\r\n        )} */}\n\n  // if(yearFilter.length === 0){\n  //   expenseContent = <p style={{ color: \"white\" }}>There is no elements found</p>\n  // }else{\n  // expenseContent = yearFilter.map((e) => (\n  //       <ExpenseItem\n  //         title={e.title}\n  //         amount={e.amount}\n  //         date={e.date}\n  //         key={e.id}\n  //       ></ExpenseItem>\n  //     ))}\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selectedYEar: savedYear,\n      onSaveYear: yearChangeHAndler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartExpenses, {\n      expenses: yearFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n      items: yearFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(AppExpenses, \"24pZYgDA6IYgtB3JaY7xgyPGJjc=\");\n_c = AppExpenses;\nexport default AppExpenses;\nvar _c;\n$RefreshReg$(_c, \"AppExpenses\");","map":{"version":3,"names":["React","useState","ExpensesFilter","Card","ChartExpenses","ExpenseList","jsxDEV","_jsxDEV","AppExpenses","props","_s","savedYear","setSavedYear","yearChangeHAndler","year","yearFilter","items","filter","array","date","getFullYear","toString","className","children","selectedYEar","onSaveYear","fileName","_jsxFileName","lineNumber","columnNumber","expenses","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/Components/Expenses/AppExpenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./AppExpenses.css\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nimport ExpensesFilter from \"../NewExpense/ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ChartExpenses from \"../NewExpense/ChartExpenses\";\r\nimport ExpenseList from \"./ExpenseList\";\r\n\r\nfunction AppExpenses(props) {\r\n\r\n  const [savedYear, setSavedYear] = useState(\"2023\");\r\n  const yearChangeHAndler = (year) => {\r\n    setSavedYear(year);\r\n  };\r\n\r\n  // let expenseContent = <p style={{ color: \"white\" }}>There is no elements found</p>\r\n\r\n  const yearFilter = props.items.filter((array) => {\r\n    return array.date.getFullYear().toString() === savedYear;\r\n  });\r\n\r\n\r\n\r\n\r\n{/* {yearFilter.length === 0 ? (\r\n        expenseContent\r\n      ) : (\r\n        yearFilter.map((e) => (\r\n          <ExpenseItem\r\n            title={e.title}               //second way. Writing more code, but a way simpler in understanding\r\n            amount={e.amount}\r\n            date={e.date}\r\n            key={e.id}\r\n          ></ExpenseItem>\r\n        ))\r\n      )} */}\r\n\r\n\r\n  // if(yearFilter.length === 0){\r\n  //   expenseContent = <p style={{ color: \"white\" }}>There is no elements found</p>\r\n  // }else{\r\n    // expenseContent = yearFilter.map((e) => (\r\n    //       <ExpenseItem\r\n    //         title={e.title}\r\n    //         amount={e.amount}\r\n    //         date={e.date}\r\n    //         key={e.id}\r\n    //       ></ExpenseItem>\r\n    //     ))}\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYEar={savedYear}\r\n        onSaveYear={yearChangeHAndler}\r\n      ></ExpensesFilter>\r\n      <ChartExpenses expenses={yearFilter} />\r\n        <ExpenseList items={yearFilter} />\r\n    </Card>\r\n  );\r\n}\r\nexport default AppExpenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,mBAAmB;AAC1B,OAAO,mBAAmB;AAE1B,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAMY,iBAAiB,GAAIC,IAAI,IAAK;IAClCF,YAAY,CAACE,IAAI,CAAC;EACpB,CAAC;;EAED;;EAEA,MAAMC,UAAU,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,KAAK,IAAK;IAC/C,OAAOA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,SAAS;EAC1D,CAAC,CAAC;EAKJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAXC;;EAcC;EACA;EACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEF,oBACEJ,OAAA,CAACJ,IAAI;IAACmB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACxBhB,OAAA,CAACL,cAAc;MACbsB,YAAY,EAAEb,SAAU;MACxBc,UAAU,EAAEZ;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eAClBtB,OAAA,CAACH,aAAa;MAAC0B,QAAQ,EAAEf;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCtB,OAAA,CAACF,WAAW;MAACW,KAAK,EAAED;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAACnB,EAAA,CApDQF,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAqDpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}