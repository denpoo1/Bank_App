{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\MarketButtons\\\\MarketButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Wrap from \"../Wrap/Wrap\";\nimport styles from './MarketButtons.module.css';\nimport deposit from '../images/MarketButtons/deposit.png';\nimport Modal from '../Modal/Module'; // Импортируем компонент модального окна\nimport axios from 'axios';\nimport Cookies from \"js-cookie\";\nimport visa from '../images/card/visa.png';\nimport { useSpring, animated } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketButtons = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [id, setId] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isCardListOpen, setIsCardListOpen] = useState(false);\n  const [cardNumber, setCardNumber] = useState('');\n  const [isCardNumberValid, setIsCardNumberValid] = useState(true);\n  const [amount, setAmount] = useState('');\n  const [isAmountValid, setIsAmountValid] = useState(true);\n  const isFormValid = isCardNumberValid && isAmountValid && amount.trim() !== '' && cardNumber.trim() !== ''; // Check if amount is not empty\n\n  const handleAmountChange = e => {\n    const input = e.target.value.replace(/[^\\d,]/g, ''); // Remove non-digit and non-comma characters\n    setAmount(input);\n    setIsAmountValid(/^\\d{0,5}(,\\d{0,2})?$/.test(input)); // Check if amount is valid\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent form submission if it's not valid\n\n    if (isFormValid) {\n      const token = Cookies.get('token');\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      try {\n        // Request to get all credit card numbers\n        const creditCardsResponse = await axios.get('http://localhost:8080/credit-cards', {\n          headers\n        });\n        const creditCardNumbers = creditCardsResponse.data.map(creditCard => creditCard.cardNumber);\n\n        // Convert entered card number to an integer\n        const enteredCardNumber = parseInt(cardNumber.replace(/\\D/g, ''), 10);\n\n        // Check if the entered card number exists in the list of all credit card numbers\n        if (creditCardNumbers.includes(enteredCardNumber)) {\n          // Find the from_account_id (id of the selectedCard)\n          const from_account_id = selectedCard.id;\n\n          // Find the to_account_id using the entered card number\n          const matchingCard = creditCardsResponse.data.find(creditCard => creditCard.cardNumber === enteredCardNumber);\n          const to_account_id = matchingCard.id;\n\n          // Convert the amount to cents if it's in dollars\n          const amountInCents = parseFloat(amount.replace(',', '.'));\n\n          // Send the payment request\n          const paymentData = {\n            from_account_id,\n            to_account_id,\n            amount: amountInCents\n          };\n          const paymentResponse = await axios.post('http://localhost:8080/payments', paymentData, {\n            headers\n          });\n          console.log('Payment successful:', paymentResponse.data);\n        } else {\n          console.log('Entered card number does not exist.');\n        }\n      } catch (error) {\n        console.error('Error processing payment:', error);\n      }\n    }\n  };\n  const handleCardNumberChange = e => {\n    const input = e.target.value.replace(/\\D/g, ''); // Remove non-digit characters\n    let formattedInput = '';\n    for (let i = 0; i < input.length; i += 4) {\n      formattedInput += input.slice(i, i + 4) + ' ';\n    }\n    setCardNumber(formattedInput.trim());\n    setIsCardNumberValid(input.length === 16); // Check if card number is valid\n  };\n\n  const marketButtons = [{\n    img: deposit,\n    text: \"Deposit\"\n  }, {\n    img: deposit,\n    text: \"Send\"\n  }, {\n    img: deposit,\n    text: \"kakaya_to\"\n  }, {\n    img: deposit,\n    text: \"xuynya\"\n  }, {\n    img: deposit,\n    text: \"xuy\"\n  }, {\n    img: deposit,\n    text: \"ne_ebu\"\n  }, {\n    img: deposit,\n    text: \"lox\"\n  }];\n  const [isDepositModalOpen, setIsDepositModalOpen] = useState(false);\n  const handleDepositClick = e => {\n    e.preventDefault();\n    const firstCard = cards[0]; // Получаем первую карту из массива\n    setSelectedCard(firstCard); // Устанавливаем её как выбранную карту\n    setIsCardListOpen(false); // Закрываем список карт\n    setIsDepositModalOpen(true); // Открываем модальное окно\n  };\n\n  const handleCloseDepositModal = () => {\n    if (!isCardListOpen) {\n      setIsDepositModalOpen(false);\n    }\n  };\n  const handleCardSelect = card => {\n    setSelectedCard(card);\n    setIsCardListOpen(false);\n  };\n  const handleCloseCardList = () => {\n    setIsCardListOpen(false);\n  };\n  useEffect(() => {\n    const token = Cookies.get('token');\n    const username = Cookies.get('username');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get('http://localhost:8080/customers', {\n      headers\n    }).then(res => {\n      const matchingUser = res.data.find(arr => arr.username === username);\n      if (matchingUser) {\n        setId(matchingUser.id);\n      }\n    }).catch(error => {\n      console.error('Error fetching customer data', error);\n    });\n    if (id != null) {\n      axios.get(`http://localhost:8080/customers/${id}/credit-cards\n            `, {\n        headers\n      }).then(res => {\n        setCards(res.data);\n      });\n    }\n  }, [id]);\n  const formatBalance = balance => {\n    const formattedBalance = balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n    return formattedBalance;\n  };\n  const modalAnimation = useSpring({\n    from: {\n      opacity: 0,\n      transform: 'translateY(50px) scale(0.1)' // Начальное положение и размер\n    },\n\n    to: {\n      opacity: 1,\n      transform: 'translateY(0) scale(1)' // Конечное положение и размер\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    className: `${styles.marketButtonsWrapper} `,\n    children: [\"Markets\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonsWrapper,\n      children: marketButtons.map((button, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.wrapForMarketElement,\n        onClick: button.text === \"Deposit\" ? handleDepositClick : undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: button.img,\n          alt: \"qwe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: button.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), isDepositModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      className: isCardListOpen ? `${styles.qwe}` : '',\n      onClose: handleCloseDepositModal,\n      children: /*#__PURE__*/_jsxDEV(animated.form, {\n        className: styles.depForm,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.withdrawWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.withdrawTitle,\n            children: \"Withdraw money from:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cardWrapper,\n            onClick: () => setIsCardListOpen(!isCardListOpen),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.cardImage,\n              children: [selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"** \", selectedCard.cardNumber.toString().slice(-4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"visa\",\n                src: visa\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.cardNameAndWrapper,\n              children: [selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: selectedCard.billingAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this), selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [formatBalance(selectedCard.balance), \" \\u20AC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), isCardListOpen && /*#__PURE__*/_jsxDEV(animated.div, {\n            className: `${styles.cardList} \n                                    ${styles.backdrop}`,\n            style: modalAnimation,\n            children: /*#__PURE__*/_jsxDEV(animated.div, {\n              style: modalAnimation,\n              className: styles.cardList,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.cardListElementWrapper,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.cardTitleAndCloseButton,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Withdraw from:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `${styles.closeButton}}`,\n                    onClick: handleCloseCardList,\n                    children: \"\\u2716\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 45\n                }, this), cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.cardListItem,\n                  onClick: () => handleCardSelect(card) // Выбор карты и закрытие списка\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.cardImage,\n                    children: [selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"** \", card.cardNumber.toString().slice(-4)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      alt: \"visa\",\n                      src: visa\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.cardNameAndWrapper,\n                    children: [selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: card.billingAddress\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 61\n                    }, this), selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [formatBalance(card.balance), \" \\u20AC\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 53\n                  }, this)]\n                }, card.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.withdrawWrapper} ${isCardNumberValid ? '' : styles.error}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.withdrawTitle,\n            children: \"Send money to:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.inputForCardNumber,\n            type: \"text\",\n            value: cardNumber,\n            onChange: handleCardNumberChange,\n            placeholder: \"0000 0000 0000 0000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this), !isCardNumberValid && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.errorText,\n            children: \"Card number must have exactly 16 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.amountWrapper} ${isAmountValid ? '' : styles.error}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.amountTitle,\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.inputForAmount,\n            type: \"text\",\n            value: amount,\n            onChange: handleAmountChange,\n            placeholder: \"00,00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), !isAmountValid && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.errorText,\n            children: \"Invalid amount format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.formButton} ${isFormValid ? styles.formButtonActive : ''}`,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(MarketButtons, \"QYo/VN5Sx9LvVWpDOHK2nayAi2s=\", false, function () {\n  return [useSpring];\n});\n_c = MarketButtons;\nexport default MarketButtons;\nvar _c;\n$RefreshReg$(_c, \"MarketButtons\");","map":{"version":3,"names":["React","useState","useEffect","Wrap","styles","deposit","Modal","axios","Cookies","visa","useSpring","animated","jsxDEV","_jsxDEV","MarketButtons","_s","cards","setCards","id","setId","selectedCard","setSelectedCard","isCardListOpen","setIsCardListOpen","cardNumber","setCardNumber","isCardNumberValid","setIsCardNumberValid","amount","setAmount","isAmountValid","setIsAmountValid","isFormValid","trim","handleAmountChange","e","input","target","value","replace","test","handleSubmit","preventDefault","token","get","headers","Authorization","creditCardsResponse","creditCardNumbers","data","map","creditCard","enteredCardNumber","parseInt","includes","from_account_id","matchingCard","find","to_account_id","amountInCents","parseFloat","paymentData","paymentResponse","post","console","log","error","handleCardNumberChange","formattedInput","i","length","slice","marketButtons","img","text","isDepositModalOpen","setIsDepositModalOpen","handleDepositClick","firstCard","handleCloseDepositModal","handleCardSelect","card","handleCloseCardList","username","then","res","matchingUser","arr","catch","formatBalance","balance","formattedBalance","toString","modalAnimation","from","opacity","transform","to","className","marketButtonsWrapper","children","buttonsWrapper","button","index","wrapForMarketElement","onClick","undefined","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","qwe","onClose","form","depForm","onSubmit","withdrawWrapper","withdrawTitle","cardWrapper","cardImage","cardNameAndWrapper","billingAddress","div","cardList","backdrop","style","cardListElementWrapper","cardTitleAndCloseButton","closeButton","cardListItem","inputForCardNumber","type","onChange","placeholder","errorText","amountWrapper","amountTitle","inputForAmount","formButton","formButtonActive","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/MarketButtons/MarketButtons.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Wrap from \"../Wrap/Wrap\";\r\nimport styles from './MarketButtons.module.css';\r\nimport deposit from '../images/MarketButtons/deposit.png';\r\nimport Modal from '../Modal/Module'; // Импортируем компонент модального окна\r\nimport axios from 'axios';\r\nimport Cookies from \"js-cookie\";\r\nimport visa from '../images/card/visa.png';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\n\r\n\r\nconst MarketButtons = () => {\r\n    const [cards, setCards] = useState([])\r\n    const [id, setId] = useState(null)\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n    const [isCardListOpen, setIsCardListOpen] = useState(false);\r\n    const [cardNumber, setCardNumber] = useState('');\r\n    const [isCardNumberValid, setIsCardNumberValid] = useState(true);\r\n    const [amount, setAmount] = useState('');\r\n    const [isAmountValid, setIsAmountValid] = useState(true);\r\n    const isFormValid = isCardNumberValid && isAmountValid && amount.trim() !== '' && cardNumber.trim() !== ''; // Check if amount is not empty\r\n\r\n\r\n    const handleAmountChange = (e) => {\r\n        const input = e.target.value.replace(/[^\\d,]/g, ''); // Remove non-digit and non-comma characters\r\n        setAmount(input);\r\n        setIsAmountValid(/^\\d{0,5}(,\\d{0,2})?$/.test(input)); // Check if amount is valid\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevent form submission if it's not valid\r\n    \r\n        if (isFormValid) {\r\n            const token = Cookies.get('token');\r\n            const headers = {\r\n                Authorization: `Bearer ${token}`\r\n            };\r\n    \r\n            try {\r\n                // Request to get all credit card numbers\r\n                const creditCardsResponse = await axios.get('http://localhost:8080/credit-cards', { headers });\r\n                const creditCardNumbers = creditCardsResponse.data.map(creditCard => creditCard.cardNumber);\r\n    \r\n                // Convert entered card number to an integer\r\n                const enteredCardNumber = parseInt(cardNumber.replace(/\\D/g, ''), 10);\r\n    \r\n                // Check if the entered card number exists in the list of all credit card numbers\r\n                if (creditCardNumbers.includes(enteredCardNumber)) {\r\n                    // Find the from_account_id (id of the selectedCard)\r\n                    const from_account_id = selectedCard.id;\r\n    \r\n                    // Find the to_account_id using the entered card number\r\n                    const matchingCard = creditCardsResponse.data.find(creditCard => creditCard.cardNumber === enteredCardNumber);\r\n                    const to_account_id = matchingCard.id;\r\n    \r\n                    // Convert the amount to cents if it's in dollars\r\n                    const amountInCents = parseFloat(amount.replace(',', '.'));\r\n                    \r\n                    // Send the payment request\r\n                    const paymentData = {\r\n                        from_account_id,\r\n                        to_account_id,\r\n                        amount: amountInCents\r\n                    };\r\n    \r\n                    const paymentResponse = await axios.post('http://localhost:8080/payments', paymentData, { headers });\r\n                    console.log('Payment successful:', paymentResponse.data);\r\n                } else {\r\n                    console.log('Entered card number does not exist.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error processing payment:', error);\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    const handleCardNumberChange = (e) => {\r\n        const input = e.target.value.replace(/\\D/g, ''); // Remove non-digit characters\r\n        let formattedInput = '';\r\n\r\n        for (let i = 0; i < input.length; i += 4) {\r\n            formattedInput += input.slice(i, i + 4) + ' ';\r\n        }\r\n\r\n        setCardNumber(formattedInput.trim());\r\n        setIsCardNumberValid(input.length === 16); // Check if card number is valid\r\n    };\r\n\r\n\r\n\r\n    const marketButtons = [\r\n        { img: deposit, text: \"Deposit\" },\r\n        { img: deposit, text: \"Send\" },\r\n        { img: deposit, text: \"kakaya_to\" },\r\n        { img: deposit, text: \"xuynya\" },\r\n        { img: deposit, text: \"xuy\" },\r\n        { img: deposit, text: \"ne_ebu\" },\r\n        { img: deposit, text: \"lox\" },\r\n    ];\r\n\r\n    const [isDepositModalOpen, setIsDepositModalOpen] = useState(false);\r\n\r\n    const handleDepositClick = (e) => {\r\n        e.preventDefault();\r\n        const firstCard = cards[0]; // Получаем первую карту из массива\r\n        setSelectedCard(firstCard); // Устанавливаем её как выбранную карту\r\n        setIsCardListOpen(false); // Закрываем список карт\r\n        setIsDepositModalOpen(true); // Открываем модальное окно\r\n    };\r\n\r\n    const handleCloseDepositModal = () => {\r\n        if (!isCardListOpen) {\r\n            setIsDepositModalOpen(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleCardSelect = (card) => {\r\n        setSelectedCard(card);\r\n        setIsCardListOpen(false);\r\n    };\r\n\r\n    const handleCloseCardList = () => {\r\n        setIsCardListOpen(false);\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const token = Cookies.get('token')\r\n        const username = Cookies.get('username')\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n        axios.get('http://localhost:8080/customers', { headers }).then((res) => {\r\n            const matchingUser = res.data.find(arr => arr.username === username)\r\n            if (matchingUser) {\r\n                setId(matchingUser.id)\r\n            }\r\n        }).catch(error => {\r\n            console.error('Error fetching customer data', error);\r\n        });\r\n\r\n\r\n        if (id != null) {\r\n            axios.get(`http://localhost:8080/customers/${id}/credit-cards\r\n            `, { headers }).then((res) => {\r\n                setCards(res.data)\r\n\r\n\r\n            })\r\n        }\r\n    }, [id])\r\n\r\n\r\n    const formatBalance = (balance) => {\r\n        const formattedBalance = balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\r\n        return formattedBalance;\r\n    }\r\n\r\n\r\n    const modalAnimation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            transform: 'translateY(50px) scale(0.1)', // Начальное положение и размер\r\n        },\r\n        to: {\r\n            opacity: 1,\r\n            transform: 'translateY(0) scale(1)', // Конечное положение и размер\r\n        },\r\n    });\r\n    return (\r\n\r\n        <Wrap className={`${styles.marketButtonsWrapper} `}>\r\n            Markets\r\n            <div className={styles.buttonsWrapper}>\r\n                {marketButtons.map((button, index) => (\r\n                    <button\r\n                        key={index}\r\n                        className={styles.wrapForMarketElement}\r\n                        onClick={button.text === \"Deposit\" ? handleDepositClick : undefined}\r\n                    >\r\n                        <img src={button.img} alt='qwe'></img>\r\n                        <span>{button.text}</span>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {isDepositModalOpen && (\r\n                <Modal className={isCardListOpen ? `${styles.qwe}` : ''} onClose={handleCloseDepositModal}>\r\n\r\n                    <animated.form className={styles.depForm} onSubmit={handleSubmit}>\r\n                        <h1>Transfer</h1>\r\n                        <div className={styles.withdrawWrapper}>\r\n                            <h2 className={styles.withdrawTitle}>Withdraw money from:</h2>\r\n                            <div\r\n                                className={styles.cardWrapper}\r\n                                onClick={() => setIsCardListOpen(!isCardListOpen)}\r\n                            >\r\n                                <div className={styles.cardImage}>\r\n                                    {selectedCard && (\r\n                                        <span>** {selectedCard.cardNumber.toString().slice(-4)}</span>\r\n                                    )}\r\n                                    <img alt=\"visa\" src={visa} />\r\n                                </div>\r\n                                <div className={styles.cardNameAndWrapper}>\r\n                                    {selectedCard && (\r\n                                        <span>{selectedCard.billingAddress}</span>\r\n                                    )}\r\n                                    {selectedCard && (\r\n                                        <span>{formatBalance(selectedCard.balance)} €</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {isCardListOpen && (\r\n                                <animated.div\r\n                                    className={`${styles.cardList} \r\n                                    ${styles.backdrop}`}\r\n                                    style={modalAnimation}\r\n                                >\r\n                                    <animated.div style={modalAnimation} className={styles.cardList}>\r\n                                        {/* Вывести список всех карт для выбора */}\r\n                                        <div className={styles.cardListElementWrapper}>\r\n                                            <div className={styles.cardTitleAndCloseButton}>\r\n                                                <span>Withdraw from:</span>\r\n                                                <span\r\n                                                    className={`${styles.closeButton}}`}\r\n                                                    onClick={handleCloseCardList}\r\n                                                >\r\n                                                    &#10006;\r\n                                                </span>\r\n                                            </div>\r\n                                            {cards.map((card) => (\r\n                                                <div\r\n                                                    key={card.id}\r\n                                                    className={styles.cardListItem}\r\n                                                    onClick={() => handleCardSelect(card)} // Выбор карты и закрытие списка\r\n                                                >\r\n                                                    <div className={styles.cardImage}>\r\n                                                        {selectedCard && (\r\n                                                            <span>** {card.cardNumber.toString().slice(-4)}</span>\r\n                                                        )}\r\n                                                        <img alt=\"visa\" src={visa} />\r\n                                                    </div>\r\n                                                    <div className={styles.cardNameAndWrapper}>\r\n                                                        {selectedCard && (\r\n                                                            <span>{card.billingAddress}</span>\r\n                                                        )}\r\n                                                        {selectedCard && (\r\n                                                            <span>{formatBalance(card.balance)} €</span>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </animated.div>\r\n                                </animated.div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className={`${styles.withdrawWrapper} ${isCardNumberValid ? '' : styles.error}`}>\r\n                            <h2 className={styles.withdrawTitle}>Send money to:</h2>\r\n                            <input\r\n                                className={styles.inputForCardNumber}\r\n                                type=\"text\"\r\n                                value={cardNumber}\r\n                                onChange={handleCardNumberChange}\r\n                                placeholder=\"0000 0000 0000 0000\"\r\n                            />\r\n                            {!isCardNumberValid && <p className={styles.errorText}>Card number must have exactly 16 digits</p>}\r\n                        </div>\r\n                        <div className={`${styles.amountWrapper} ${isAmountValid ? '' : styles.error}`}>\r\n                            <h2 className={styles.amountTitle}>Amount</h2>\r\n                            <input\r\n                                className={styles.inputForAmount}\r\n                                type=\"text\"\r\n                                value={amount}\r\n                                onChange={handleAmountChange}\r\n                                placeholder=\"00,00\"\r\n                            />\r\n                            {!isAmountValid && <p className={styles.errorText}>Invalid amount format</p>}\r\n                        </div>\r\n\r\n                        <button className={`${styles.formButton} ${isFormValid ? styles.formButtonActive : ''}`} type=\"submit\">\r\n                            Submit\r\n                        </button>\r\n                    </animated.form>\r\n\r\n                </Modal>\r\n            )}\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nexport default MarketButtons;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}