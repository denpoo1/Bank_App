{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\Body\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from './Body.module.css';\nimport BodyWrap from '../Wrap/BodyWrap';\nimport TotalBalance from \"../TotalBalance/TotalBalance\";\nimport MarketButtons from \"../MarketButtons/MarketButtons\";\nimport Card from '../Card/Card';\nimport Currency from \"../Currency/Currency\";\nimport axios from \"axios\"; // Import Axios\nimport Cookies from \"js-cookie\"; // Import Cookies\nimport AppExpenses from \"../Components/Expenses/AppExpenses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [selectedCardId, setSelectedCardId] = useState(null);\n  const [arrayOfExpenses, setArrayOfExpenses] = useState([null]);\n  useEffect(() => {\n    const token = Cookies.get('token');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get('http://localhost:8080/transactions', {\n      headers\n    }).then(res => {\n      // Получите все транзакции из ответа\n      const transactions = res.data;\n\n      // Преобразуйте строку 'date' в объект 'Date'\n      transactions.forEach(transaction => {\n        transaction.date = new Date(transaction.date);\n      });\n\n      // Фильтруйте транзакции, где fromCardId совпадает с selectedCardId\n      const expenses = transactions.filter(transaction => transaction.fromCardId === selectedCardId);\n      const updatedExpenses = expenses.map(expense => {\n        if (expense.transferType === \"CARD_TO_CARD\") {\n          return {\n            ...expense,\n            title: `Transfer to Card ${expense.toCardId}`\n          };\n        }\n        return expense; // Вернуть оригинальный объект, если transferType не CARD_TO_CARD\n      });\n\n      setArrayOfExpenses(updatedExpenses);\n    });\n  }, [selectedCardId]);\n\n  // Function to handle card selection\n  const handleCardSelection = cardId => {\n    setSelectedCardId(cardId);\n  };\n  useEffect(() => {\n    const token = Cookies.get('token');\n    const username = Cookies.get('username');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get(\"http://localhost:8080/customers\", {\n      headers\n    }).then(response => {\n      const matchingUser = response.data.find(user => user.username === username);\n      if (matchingUser) {\n        axios.get(`http://localhost:8080/customers/${matchingUser.id}/credit-cards`, {\n          headers\n        }).then(response => {\n          const userCards = response.data;\n          if (userCards.length > 0) {\n            setSelectedCardId(userCards[0].id);\n          }\n        }).catch(error => {\n          console.error('An error occurred while fetching user card data', error);\n        });\n      }\n    }).catch(error => {\n      console.error('Error fetching customer data', error);\n    });\n  }, []);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleModalToggle = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thirdRow,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.firstRow,\n          children: [/*#__PURE__*/_jsxDEV(TotalBalance, {\n            cardId: selectedCardId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MarketButtons, {\n            onModalToggle: handleModalToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.secondRow,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            onCardSelect: handleCardSelection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Currency, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppExpenses, {\n        items: arrayOfExpenses,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"IOwAa437DNrgIFJ/Q5sWlGOSZOs=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","styles","BodyWrap","TotalBalance","MarketButtons","Card","Currency","axios","Cookies","AppExpenses","jsxDEV","_jsxDEV","Body","_s","selectedCardId","setSelectedCardId","arrayOfExpenses","setArrayOfExpenses","token","get","headers","Authorization","then","res","transactions","data","forEach","transaction","date","Date","expenses","filter","fromCardId","updatedExpenses","map","expense","transferType","title","toCardId","handleCardSelection","cardId","username","response","matchingUser","find","user","id","userCards","length","catch","error","console","isModalOpen","setIsModalOpen","handleModalToggle","children","className","thirdRow","firstRow","fileName","_jsxFileName","lineNumber","columnNumber","onModalToggle","secondRow","onCardSelect","items","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/Body/Body.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from './Body.module.css';\r\nimport BodyWrap from '../Wrap/BodyWrap'\r\nimport TotalBalance from \"../TotalBalance/TotalBalance\";\r\nimport MarketButtons from \"../MarketButtons/MarketButtons\";\r\nimport Card from '../Card/Card';\r\nimport Currency from \"../Currency/Currency\";\r\nimport axios from \"axios\"; // Import Axios\r\nimport Cookies from \"js-cookie\"; // Import Cookies\r\nimport AppExpenses from \"../Components/Expenses/AppExpenses\";\r\n\r\nconst Body = () => {\r\n    \r\n\r\n    const [selectedCardId, setSelectedCardId] = useState(null);\r\n    const [arrayOfExpenses, setArrayOfExpenses] = useState([null])\r\n    useEffect(() => {\r\n        const token = Cookies.get('token');\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n        \r\n        axios.get('http://localhost:8080/transactions', { headers }).then(\r\n            (res) => {\r\n                // Получите все транзакции из ответа\r\n                const transactions = res.data;\r\n        \r\n                // Преобразуйте строку 'date' в объект 'Date'\r\n                transactions.forEach(transaction => {\r\n                    transaction.date = new Date(transaction.date);\r\n                });\r\n        \r\n                // Фильтруйте транзакции, где fromCardId совпадает с selectedCardId\r\n                const expenses = transactions.filter(transaction => transaction.fromCardId === selectedCardId);\r\n                const updatedExpenses = expenses.map(expense => {\r\n                    if (expense.transferType === \"CARD_TO_CARD\") {\r\n                        return { ...expense, title: `Transfer to Card ${expense.toCardId}` };\r\n                    }\r\n                    return expense; // Вернуть оригинальный объект, если transferType не CARD_TO_CARD\r\n                });\r\n                \r\n                setArrayOfExpenses(updatedExpenses);\r\n            }\r\n        )\r\n        \r\n    }, [selectedCardId]); \r\n    \r\n\r\n\r\n    // Function to handle card selection\r\n    const handleCardSelection = (cardId) => {\r\n        setSelectedCardId(cardId);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = Cookies.get('token');\r\n        const username = Cookies.get('username');\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n        axios.get(\"http://localhost:8080/customers\", { headers })\r\n            .then(response => {\r\n                const matchingUser = response.data.find(user => user.username === username);\r\n\r\n                if (matchingUser) {\r\n\r\n                    axios.get(`http://localhost:8080/customers/${matchingUser.id}/credit-cards`, { headers })\r\n                        .then(response => {\r\n                            const userCards = response.data;\r\n                            if (userCards.length > 0) {\r\n                                setSelectedCardId(userCards[0].id);\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('An error occurred while fetching user card data', error);\r\n                        });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching customer data', error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const handleModalToggle = () => {\r\n        setIsModalOpen(!isModalOpen);\r\n    };\r\n    return (\r\n\r\n        <BodyWrap>\r\n            <div className={styles.thirdRow}>\r\n                <div>\r\n                    <div className={styles.firstRow}>\r\n                        <TotalBalance cardId={selectedCardId} />\r\n                        <MarketButtons onModalToggle={handleModalToggle} />\r\n                    </div>\r\n\r\n                    <div className={styles.secondRow}>\r\n                        <Card onCardSelect={handleCardSelection} />\r\n                        <Currency />\r\n                    </div>\r\n                </div>\r\n                <AppExpenses items={arrayOfExpenses}> </AppExpenses>\r\n            </div>\r\n        </BodyWrap>\r\n    )\r\n}\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}