{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\newCard\\\\NewCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from './newCard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCard = props => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\"); // Состояние для хранения значения ввода\n  const [error, setError] = useState(\"\"); // Состояние для хранения ошибки\n\n  // Функция для проверки валидности формы\n  const isFormValid = value => {\n    // Проверка на наличие текста\n    if (value.trim() === \"\") {\n      setError(\"Please enter card holder's name\");\n      return false;\n    }\n\n    // Проверка на маленькие буквы и пробелы\n    const regex = /^[a-z\\s]+$/;\n    if (!regex.test(value)) {\n      setError(\"Only lowercase letters and spaces are allowed\");\n      return false;\n    }\n    setError(\"\"); // Очистить ошибку, если ввод валиден\n    return true;\n  };\n\n  // Обработчик изменения значения ввода\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n  useEffect(() => {\n    // Вызываем isFormValid при изменении inputValue\n    isFormValid(inputValue);\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add new card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addingNewCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputInf,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Enter please card's holder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputForCardNumber,\n          type: \"text\",\n          placeholder: \"Nick Johnson\",\n          value: inputValue,\n          onChange: handleInputChange // Используйте обработчик onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.formButton} ${isFormValid(inputValue) ? styles.formButtonActive : ''}`,\n        type: \"submit\",\n        onClick: () => props.onConfirm(props),\n        disabled: !isFormValid(inputValue) // Деактивируйте кнопку, если форма недействительна\n        ,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCard, \"jAPb1RAaMf+T6DvZUNNnPkt4gow=\");\n_c = NewCard;\nexport default NewCard;\nvar _c;\n$RefreshReg$(_c, \"NewCard\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","NewCard","props","_s","inputValue","setInputValue","error","setError","isFormValid","value","trim","regex","test","handleInputChange","e","target","className","wrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","addingNewCard","inputInf","inputForCardNumber","type","placeholder","onChange","formButton","formButtonActive","onClick","onConfirm","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/newCard/NewCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from './newCard.module.css'\r\n\r\nconst NewCard = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\"); // Состояние для хранения значения ввода\r\n  const [error, setError] = useState(\"\"); // Состояние для хранения ошибки\r\n\r\n  // Функция для проверки валидности формы\r\n  const isFormValid = (value) => {\r\n    // Проверка на наличие текста\r\n    if (value.trim() === \"\") {\r\n      setError(\"Please enter card holder's name\");\r\n      return false;\r\n    }\r\n    \r\n    // Проверка на маленькие буквы и пробелы\r\n    const regex = /^[a-z\\s]+$/;\r\n    if (!regex.test(value)) {\r\n      setError(\"Only lowercase letters and spaces are allowed\");\r\n      return false;\r\n    }\r\n    \r\n    setError(\"\"); // Очистить ошибку, если ввод валиден\r\n    return true;\r\n  };\r\n\r\n  // Обработчик изменения значения ввода\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setInputValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Вызываем isFormValid при изменении inputValue\r\n    isFormValid(inputValue);\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <div className={styles.wrapper} >\r\n      <h1>Add new card</h1>\r\n      <div className={styles.addingNewCard}>\r\n        <div className={styles.inputInf}>\r\n          <span>Enter please card's holder</span>\r\n          <input\r\n            className={styles.inputForCardNumber}\r\n            type=\"text\"\r\n            placeholder=\"Nick Johnson\"\r\n            value={inputValue}\r\n            onChange={handleInputChange} // Используйте обработчик onChange\r\n          />\r\n        </div>\r\n\r\n        {/* Отображение ошибки */}\r\n        {error && <div className={styles.error}>{error}</div>}\r\n\r\n        <button\r\n          className={`${styles.formButton} ${isFormValid(inputValue) ? styles.formButtonActive : ''}`}\r\n          type=\"submit\"\r\n          onClick={() => props.onConfirm(props)}\r\n          disabled={!isFormValid(inputValue)} // Деактивируйте кнопку, если форма недействительна\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}