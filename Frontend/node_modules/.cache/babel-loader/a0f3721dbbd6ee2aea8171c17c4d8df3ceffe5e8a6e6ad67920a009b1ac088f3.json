{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\Transactions\\\\TransactionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from './TransactionPage.module.css';\nimport Wrap from \"../Wrap/Wrap\";\nimport liza from \"../images/logo/liza2.jpg\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport editIcon from \"../images/other/edit.png\";\nimport Modal from \"../Modal/Module\";\nimport { useSpring, animated } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioPage = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [userID, setUserID] = useState(null);\n  const handleCardSelect = card => {\n    setSelectedCard(card);\n    setIsCardListOpen(false);\n  };\n  const handleCloseCardList = () => {\n    setIsCardListOpen(false);\n  };\n  useEffect(() => {\n    const token = Cookies.get('token');\n    const username = Cookies.get('username');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n\n    // First, fetch all customers to find the matching username\n    axios.get(\"http://localhost:8080/customers\", {\n      headers\n    }).then(response => {\n      const matchingUser = response.data.find(user => user.username === username);\n      if (matchingUser) {\n        // Set the userID if the username matches\n        setUserID(matchingUser.id);\n      }\n    }).catch(error => {\n      console.error('Error fetching customer data', error);\n    });\n\n    // Then, fetch credit cards for the specific user (if userID is set)\n    if (userID !== null) {\n      axios.get(`http://localhost:8080/customers/${userID}/credit-cards`, {\n        headers\n      }).then(response => {\n        setCards(response.data);\n        console.log(response.data);\n      }).catch(error => {\n        console.error('Error fetching credit cards data', error);\n      });\n    }\n  }, [userID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardListElementWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cardTitleAndCloseButton,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Withdraw from:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${styles.closeButton}}`,\n          onClick: handleCloseCardList,\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }, this), cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cardListItem,\n        onClick: () => handleCardSelect(card) // Выбор карты и закрытие списка\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cardImage,\n          children: [selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"** \", card.cardNumber.toString().slice(-4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"visa\",\n            src: visa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cardNameAndWrapper,\n          children: [selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: card.billingAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 61\n          }, this), selectedCard && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [formatBalance(card.balance), \" \\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 53\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 49\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n      className: styles.transactionPageWrap,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tableNamesWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.tableNames,\n          children: \"From card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.tableNames,\n          children: \"To card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.tableNames,\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.tableNames,\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(PortfolioPage, \"CK/nzuXQRJ9rRBB7zJ3MfnEeWpc=\");\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useEffect","useState","styles","Wrap","liza","Cookies","axios","editIcon","Modal","useSpring","animated","jsxDEV","_jsxDEV","PortfolioPage","_s","cards","setCards","userID","setUserID","handleCardSelect","card","setSelectedCard","setIsCardListOpen","handleCloseCardList","token","get","username","headers","Authorization","then","response","matchingUser","data","find","user","id","catch","error","console","log","children","className","cardListElementWrapper","cardTitleAndCloseButton","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","onClick","map","cardListItem","cardImage","selectedCard","cardNumber","toString","slice","alt","src","visa","cardNameAndWrapper","billingAddress","formatBalance","balance","transactionPageWrap","tableNamesWrapper","tableNames","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/Transactions/TransactionPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from './TransactionPage.module.css';\r\nimport Wrap from \"../Wrap/Wrap\";\r\nimport liza from \"../images/logo/liza2.jpg\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport editIcon from \"../images/other/edit.png\";\r\nimport Modal from \"../Modal/Module\";\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nconst PortfolioPage = () => {\r\n    const [cards, setCards] = useState([]);\r\n    const [userID, setUserID] = useState(null);\r\n    const handleCardSelect = (card) => {\r\n        setSelectedCard(card);\r\n        setIsCardListOpen(false);\r\n    };\r\n\r\n    const handleCloseCardList = () => {\r\n        setIsCardListOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        const token = Cookies.get('token');\r\n        const username = Cookies.get('username');\r\n        \r\n        const headers = {\r\n          Authorization: `Bearer ${token}`\r\n        };\r\n    \r\n        // First, fetch all customers to find the matching username\r\n        axios.get(\"http://localhost:8080/customers\", { headers })\r\n          .then(response => {\r\n            const matchingUser = response.data.find(user => user.username === username);\r\n            if (matchingUser) {\r\n              // Set the userID if the username matches\r\n              setUserID(matchingUser.id);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching customer data', error);\r\n          });\r\n    \r\n        // Then, fetch credit cards for the specific user (if userID is set)\r\n        if (userID !== null) {\r\n          axios.get(`http://localhost:8080/customers/${userID}/credit-cards`, { headers })\r\n            .then(response => {\r\n              setCards(response.data);\r\n              console.log(response.data)\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching credit cards data', error);\r\n            })\r\n        }\r\n      }, [userID]);\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.cardListElementWrapper}>\r\n                                            <div className={styles.cardTitleAndCloseButton}>\r\n                                                <span>Withdraw from:</span>\r\n                                                <span\r\n                                                    className={`${styles.closeButton}}`}\r\n                                                    onClick={handleCloseCardList}\r\n                                                >\r\n                                                    &#10006;\r\n                                                </span>\r\n                                            </div>\r\n                                            {cards.map((card) => (\r\n                                                <div\r\n                                                    key={card.id}\r\n                                                    className={styles.cardListItem}\r\n                                                    onClick={() => handleCardSelect(card)} // Выбор карты и закрытие списка\r\n                                                >\r\n                                                    <div className={styles.cardImage}>\r\n                                                        {selectedCard && (\r\n                                                            <span>** {card.cardNumber.toString().slice(-4)}</span>\r\n                                                        )}\r\n                                                        <img alt=\"visa\" src={visa} />\r\n                                                    </div>\r\n                                                    <div className={styles.cardNameAndWrapper}>\r\n                                                        {selectedCard && (\r\n                                                            <span>{card.billingAddress}</span>\r\n                                                        )}\r\n                                                        {selectedCard && (\r\n                                                            <span>{formatBalance(card.balance)} €</span>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n        <Wrap className={styles.transactionPageWrap}>\r\n\r\n            <div className={styles.tableNamesWrapper}>\r\n                <span className={styles.tableNames}>From card</span>\r\n                <span className={styles.tableNames}>To card</span>\r\n                <span className={styles.tableNames}>Date</span>\r\n                <span className={styles.tableNames}>Amount</span>\r\n            </div>\r\n\r\n\r\n        </Wrap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PortfolioPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}