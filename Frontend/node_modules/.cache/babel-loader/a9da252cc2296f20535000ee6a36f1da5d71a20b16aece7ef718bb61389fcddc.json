{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\Body\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from './Body.module.css';\nimport BodyWrap from '../Wrap/BodyWrap';\nimport TotalBalance from \"../TotalBalance/TotalBalance\";\nimport MarketButtons from \"../MarketButtons/MarketButtons\";\nimport Card from '../Card/Card';\nimport Currency from \"../Currency/Currency\";\nimport axios from \"axios\"; // Import Axios\nimport Cookies from \"js-cookie\"; // Import Cookies\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [selectedCardId, setSelectedCardId] = useState(null);\n\n  // Function to handle card selection\n  const handleCardSelection = cardId => {\n    setSelectedCardId(cardId);\n  };\n  useEffect(() => {\n    // Fetch user's cards data from the API\n    const token = Cookies.get('token');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get(\"http://localhost:8080/customers/84/credit-cards\", {\n      headers\n    }).then(response => {\n      const userCards = response.data; // Assuming the API returns an array of user cards\n      if (userCards.length > 0) {\n        // Set the ID of the first card initially\n        setSelectedCardId(userCards[0].id);\n      }\n    }).catch(error => {\n      console.error('An error occurred while fetching user card data', error);\n    });\n  }, []); // Empty dependency array to run the effect only once\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleModalToggle = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.firstRow,\n      children: [/*#__PURE__*/_jsxDEV(TotalBalance, {\n        cardId: selectedCardId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarketButtons, {\n        onModalToggle: handleModalToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.secondRow,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        onCardSelect: handleCardSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Currency, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"Ivj6RD4MIa5kkGBYc1P5kajh6po=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","styles","BodyWrap","TotalBalance","MarketButtons","Card","Currency","axios","Cookies","jsxDEV","_jsxDEV","Body","_s","selectedCardId","setSelectedCardId","handleCardSelection","cardId","token","get","headers","Authorization","then","response","userCards","data","length","id","catch","error","console","isModalOpen","setIsModalOpen","handleModalToggle","children","className","firstRow","fileName","_jsxFileName","lineNumber","columnNumber","onModalToggle","secondRow","onCardSelect","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/Body/Body.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from './Body.module.css';\r\nimport BodyWrap from '../Wrap/BodyWrap'\r\nimport TotalBalance from \"../TotalBalance/TotalBalance\";\r\nimport MarketButtons from \"../MarketButtons/MarketButtons\";\r\nimport Card from '../Card/Card';\r\nimport Currency from \"../Currency/Currency\";\r\nimport axios from \"axios\"; // Import Axios\r\nimport Cookies from \"js-cookie\"; // Import Cookies\r\n\r\nconst Body = () => {\r\n    const [selectedCardId, setSelectedCardId] = useState(null);\r\n\r\n    // Function to handle card selection\r\n    const handleCardSelection = (cardId) => {\r\n        setSelectedCardId(cardId);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Fetch user's cards data from the API\r\n        const token = Cookies.get('token');\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n\r\n        axios.get(\"http://localhost:8080/customers/84/credit-cards\", { headers })\r\n            .then(response => {\r\n                const userCards = response.data; // Assuming the API returns an array of user cards\r\n                if (userCards.length > 0) {\r\n                    // Set the ID of the first card initially\r\n                    setSelectedCardId(userCards[0].id);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('An error occurred while fetching user card data', error);\r\n            });\r\n    }, []); // Empty dependency array to run the effect only once\r\n\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const handleModalToggle = () => {\r\n        setIsModalOpen(!isModalOpen);\r\n    };\r\n    return (\r\n        <BodyWrap>\r\n            <div className={styles.firstRow}>\r\n                <TotalBalance cardId={selectedCardId} />\r\n                <MarketButtons onModalToggle={handleModalToggle} />\r\n            </div>\r\n\r\n            <div className={styles.secondRow}>\r\n                <Card onCardSelect={handleCardSelection} />\r\n                <Currency />\r\n            </div>\r\n        </BodyWrap>\r\n    )\r\n}\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}