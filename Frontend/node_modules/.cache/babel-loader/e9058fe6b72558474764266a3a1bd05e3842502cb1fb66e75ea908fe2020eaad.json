{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\TotalBalance\\\\TotalBalance.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./TotalBalance.module.css\";\nimport Wrap from \"../Wrap/Wrap\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TotalBalance = ({\n  cardId\n}) => {\n  _s();\n  const [customerId, setId] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const [income, setIncome] = useState(0);\n  const [expenses, setExpenses] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [isPositive, setIsPositive] = useState(false);\n  useEffect(() => {\n    const username = Cookies.get('username');\n    const token = Cookies.get('token');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get('http://localhost:8080/customers', {\n      headers\n    }).then(res => {\n      const matchingUser = res.data.find(arr => arr.username === username);\n      if (matchingUser) {\n        setId(matchingUser.id);\n      }\n    }).catch(error => {\n      console.error('Error fetching customer data', error);\n    });\n    axios.get('http://localhost:8080/accounts', {\n      headers\n    }).then(res => {\n      const accounts = res.data; // Получаем массив всех аккаунтов\n\n      // Проходим по каждому аккаунту и сравниваем customerId\n      accounts.forEach(account => {\n        if (account.customerId === customerId) {\n          if (customerId != null) {\n            axios.get(`http://localhost:8080/accounts/${account.id}/transaction`, {\n              headers\n            }).then(res => {});\n          }\n        }\n      });\n    }).catch(error => {\n      console.error('Error fetching accounts data', error);\n    });\n    axios.get(`http://localhost:8080/transactions`, {\n      headers\n    }) // Запрос транзакций\n    .then(response => {\n      var _incomeExpensesMap$ca, _incomeExpensesMap$ca2, _incomeExpensesMap$ca3, _incomeExpensesMap$ca4;\n      const transactions = response.data;\n      const incomeExpensesMap = {}; // Объект для хранения доходов и расходов по картам\n\n      transactions.forEach(transaction => {\n        const {\n          fromCardId,\n          toCardId,\n          amount\n        } = transaction;\n        if (!incomeExpensesMap[fromCardId]) {\n          incomeExpensesMap[fromCardId] = {\n            income: 0,\n            expenses: 0\n          };\n        }\n        if (!incomeExpensesMap[toCardId]) {\n          incomeExpensesMap[toCardId] = {\n            income: 0,\n            expenses: 0\n          };\n        }\n        incomeExpensesMap[fromCardId].expenses += amount; // Увеличение расходов\n        incomeExpensesMap[toCardId].income += amount; // Увеличение доходов\n      });\n\n      // Обновление состояний income и expenses для текущей карты\n      setIncome(((_incomeExpensesMap$ca = incomeExpensesMap[cardId]) === null || _incomeExpensesMap$ca === void 0 ? void 0 : _incomeExpensesMap$ca.income) || 0);\n      setExpenses(((_incomeExpensesMap$ca2 = incomeExpensesMap[cardId]) === null || _incomeExpensesMap$ca2 === void 0 ? void 0 : _incomeExpensesMap$ca2.expenses) || 0);\n      const calculatedIncome = ((_incomeExpensesMap$ca3 = incomeExpensesMap[cardId]) === null || _incomeExpensesMap$ca3 === void 0 ? void 0 : _incomeExpensesMap$ca3.income) || 0;\n      const calculatedExpenses = ((_incomeExpensesMap$ca4 = incomeExpensesMap[cardId]) === null || _incomeExpensesMap$ca4 === void 0 ? void 0 : _incomeExpensesMap$ca4.expenses) || 0;\n      const calculatedPercentage = calculatedExpenses === 0 ? calculatedIncome * 100 : (calculatedIncome - calculatedExpenses) / calculatedExpenses * 100; //пофиткстать хуйню с процентом, если там он равен \n      setPercentage(calculatedPercentage);\n      setIsPositive(calculatedPercentage >= 0);\n    }).catch(error => {\n      console.error('Произошла ошибка при получении данных о транзакциях', error);\n    });\n  }, [cardId, isPositive, customerId]);\n  useEffect(() => {\n    const token = Cookies.get('token');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get(`http://localhost:8080/credit-cards/${cardId}`, {\n      headers\n    }).then(response => {\n      const cardData = response.data;\n      setBalance(cardData.balance);\n    }).catch(error => {\n      console.error('Произошла ошибка при получении данных о балансе', error);\n    });\n  }, [cardId, customerId]);\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    className: styles.wrapperTotalBAlance,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.amountTitle,\n      children: \"Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.amountWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.amount,\n        children: [\"\\u20AC\", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.amountPercentageWrapper,\n        style: {\n          backgroundColor: isPositive ? percentage > 0 ? \"#07f8b5\" : \"#b3b3b3\" : \"#FE0738\"\n        },\n        children: [percentage !== 0 ?\n        /*#__PURE__*/\n        // Conditionally render the triangle when percentage is not 0\n        _jsxDEV(\"span\", {\n          className: styles.triangle,\n          children: isPositive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u25B2\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"\\u25BC\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.amountPercentage,\n          children: Math.abs(percentage).toFixed(2) + \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.spendingsWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.income,\n        children: [\"$\", income]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.expenses,\n        children: [\"$\", expenses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(TotalBalance, \"aeSesojX0U/JkVvTz9xByu8aYsY=\");\n_c = TotalBalance;\nexport default TotalBalance;\nvar _c;\n$RefreshReg$(_c, \"TotalBalance\");","map":{"version":3,"names":["React","useState","useEffect","styles","Wrap","axios","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","TotalBalance","cardId","_s","customerId","setId","balance","setBalance","income","setIncome","expenses","setExpenses","percentage","setPercentage","isPositive","setIsPositive","username","get","token","headers","Authorization","then","res","matchingUser","data","find","arr","id","catch","error","console","accounts","forEach","account","response","_incomeExpensesMap$ca","_incomeExpensesMap$ca2","_incomeExpensesMap$ca3","_incomeExpensesMap$ca4","transactions","incomeExpensesMap","transaction","fromCardId","toCardId","amount","calculatedIncome","calculatedExpenses","calculatedPercentage","cardData","className","wrapperTotalBAlance","children","amountTitle","fileName","_jsxFileName","lineNumber","columnNumber","amountWrapper","toFixed","amountPercentageWrapper","style","backgroundColor","triangle","amountPercentage","Math","abs","spendingsWrapper","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/TotalBalance/TotalBalance.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TotalBalance.module.css\";\r\nimport Wrap from \"../Wrap/Wrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nconst TotalBalance = ({ cardId }) => {\r\n  const [customerId, setId] = useState(null)\r\n  const [balance, setBalance] = useState(0);\r\n  const [income, setIncome] = useState(0);\r\n  const [expenses, setExpenses] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [isPositive, setIsPositive] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const username = Cookies.get('username');\r\n    const token = Cookies.get('token');\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n  \r\n    axios.get('http://localhost:8080/customers', { headers }).then((res) => {\r\n      const matchingUser = res.data.find(arr => arr.username === username);\r\n      if (matchingUser) {\r\n        setId(matchingUser.id);\r\n      }\r\n    }).catch(error => {\r\n      console.error('Error fetching customer data', error);\r\n    });\r\n  \r\n    axios.get('http://localhost:8080/accounts', { headers }).then((res) => {\r\n      const accounts = res.data; // Получаем массив всех аккаунтов\r\n  \r\n      // Проходим по каждому аккаунту и сравниваем customerId\r\n      accounts.forEach(account => {\r\n        if (account.customerId === customerId) {\r\n          if (customerId != null) {\r\n            axios.get(`http://localhost:8080/accounts/${account.id}/transaction`, { headers }).then((res) => {\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }).catch(error => {\r\n      console.error('Error fetching accounts data', error);\r\n    });\r\n\r\n\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n    axios.get(`http://localhost:8080/transactions`, { headers }) // Запрос транзакций\r\n      .then(response => {\r\n        const transactions = response.data;\r\n\r\n        const incomeExpensesMap = {}; // Объект для хранения доходов и расходов по картам\r\n\r\n        transactions.forEach(transaction => {\r\n          const { fromCardId, toCardId, amount } = transaction;\r\n\r\n          if (!incomeExpensesMap[fromCardId]) {\r\n            incomeExpensesMap[fromCardId] = { income: 0, expenses: 0 };\r\n          }\r\n          if (!incomeExpensesMap[toCardId]) {\r\n            incomeExpensesMap[toCardId] = { income: 0, expenses: 0 };\r\n          }\r\n\r\n          incomeExpensesMap[fromCardId].expenses += amount; // Увеличение расходов\r\n          incomeExpensesMap[toCardId].income += amount;     // Увеличение доходов\r\n        });\r\n       \r\n        // Обновление состояний income и expenses для текущей карты\r\n        setIncome(incomeExpensesMap[cardId]?.income || 0);\r\n        setExpenses(incomeExpensesMap[cardId]?.expenses || 0);\r\n\r\n        const calculatedIncome = incomeExpensesMap[cardId]?.income || 0;\r\n        const calculatedExpenses = incomeExpensesMap[cardId]?.expenses || 0;\r\n        const calculatedPercentage = calculatedExpenses === 0 ? calculatedIncome * 100 : (calculatedIncome - calculatedExpenses) / calculatedExpenses * 100; //пофиткстать хуйню с процентом, если там он равен \r\n        setPercentage(calculatedPercentage);\r\n        setIsPositive(calculatedPercentage >= 0);\r\n      })\r\n      .catch(error => {\r\n        console.error('Произошла ошибка при получении данных о транзакциях', error);\r\n      });\r\n  }, [cardId, isPositive, customerId]);\r\n\r\n  useEffect(() => {\r\n    const token = Cookies.get('token');\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n\r\n\r\n\r\n\r\n    axios.get(`http://localhost:8080/credit-cards/${cardId}`, { headers })\r\n      .then(response => {\r\n        const cardData = response.data;\r\n\r\n        setBalance(cardData.balance);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error('Произошла ошибка при получении данных о балансе', error);\r\n      });\r\n  }, [cardId, customerId]);\r\n\r\n  return (\r\n    <Wrap className={styles.wrapperTotalBAlance}>\r\n      {/* Your other content */}\r\n      <h1 className={styles.amountTitle}>Balance</h1>\r\n      <div className={styles.amountWrapper}>\r\n        <span className={styles.amount}>\r\n        €{balance.toFixed(2)}\r\n        </span>\r\n        <div\r\n          className={styles.amountPercentageWrapper}\r\n          style={{\r\n            backgroundColor: isPositive\r\n              ? percentage > 0\r\n                ? \"#07f8b5\"\r\n                : \"#b3b3b3\"\r\n              : \"#FE0738\",\r\n          }}\r\n        >\r\n          {percentage !== 0 ? ( // Conditionally render the triangle when percentage is not 0\r\n            <span className={styles.triangle}>\r\n              {isPositive ? <>&#9650;</> : <>&#9660;</>}\r\n            </span>\r\n          ) : null}\r\n          <span className={styles.amountPercentage}>\r\n            {Math.abs(percentage).toFixed(2) + \"%\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.spendingsWrapper}>\r\n        <span className={styles.income}>${income}</span>\r\n        <span className={styles.expenses}>${expenses}</span>\r\n      </div>\r\n    </Wrap>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default TotalBalance;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}