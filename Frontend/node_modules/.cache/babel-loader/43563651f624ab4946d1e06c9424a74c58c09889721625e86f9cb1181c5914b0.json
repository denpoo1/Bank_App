{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\Login\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './Signup.module.css';\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phoneCode, setPhoneCode] = useState(''); // State for the selected country code\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [error, setError] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const countryCodes = [{\n    phoneCode: '1',\n    name: 'United States',\n    countryCode: 'US',\n    img: './images/x'\n  }, {\n    phoneCode: '91',\n    name: 'India',\n    countryCode: 'IN'\n  }, {\n    phoneCode: '44',\n    name: 'United Kingdom',\n    countryCode: 'UK'\n  }\n  // Add more country codes as needed\n  ];\n\n  const handleSignup = async e => {\n    e.preventDefault();\n    const trimmedUsername = username.trim();\n    const trimmedEmail = email.trim();\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedPhone = phone.trim();\n    const trimmedAdress = address.trim();\n\n    // Validate required fields\n    if (!trimmedUsername || !trimmedEmail || !trimmedFirstName || !trimmedLastName || !trimmedPhone || !trimmedAdress) {\n      setError(new Error('Please fill in all required fields'));\n      return;\n    }\n    // Validate passwords\n    if (password !== confirmPassword) {\n      setError(new Error('Passwords do not match'));\n      return;\n    }\n\n    // Validate username (only Latin characters allowed)\n    const usernameRegex = /^[a-zA-Z0-9_]+$/;\n    if (!username.match(usernameRegex)) {\n      setError(new Error('Username should only contain Latin characters, numbers, and underscores'));\n      return;\n    }\n    if (username.length > 10) {\n      setError(new Error('Username should not be longer than 10 characters'));\n      return;\n    }\n\n    // Validate email format\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n    if (!email.match(emailRegex)) {\n      setError(new Error('Invalid email format'));\n      return;\n    }\n    const phoneNumberRegex = /^\\d+$/;\n    if (!trimmedPhone.match(phoneNumberRegex)) {\n      setError(new Error('Phone number should contain only numbers'));\n      return;\n    }\n    if (!selectedCountry) {\n      setError(new Error('Please select a country code'));\n      return;\n    }\n    if (!selectedCountry) {\n      setError(new Error('Please select a country code'));\n      return;\n    }\n    Cookies.remove('token');\n    try {\n      // Call the API to register the user\n      const response = await axios.post('http://localhost:8080/auth/signup', {\n        username: trimmedUsername,\n        email: trimmedEmail,\n        password: password,\n        first_name: trimmedFirstName,\n        last_name: trimmedLastName,\n        phone: `${phoneCode}${trimmedPhone}`,\n        address: trimmedAdress\n      });\n      console.log('Signup successful:', response.data);\n      console.log(`+${phoneCode}${trimmedPhone}`);\n      Cookies.set('token', response.data.token);\n\n      // Redirect to the login page after successful signup\n      navigate('/');\n    } catch (error) {\n      if (error.response && error.response.status === 400) {\n        setError(new Error(error.response.data)); // Set the error message from the server response\n      } else {\n        setError(error);\n      }\n    }\n  };\n  useEffect(() => {\n    // Получаем токен из куки\n    const tokenFromCookie = Cookies.get(\"token\");\n    if (tokenFromCookie) {\n      console.log(tokenFromCookie);\n      // Выполняем GET-запрос для получения данных пользователя\n      axios.get(\"http://localhost:8080/customers\", {\n        headers: {\n          Authorization: `Bearer ${tokenFromCookie}`\n        }\n      }).then(response => {\n        // Получаем массив аккаунтов\n        const accounts = response.data;\n\n        // Получаем сохраненный юзернейм из куки\n        const savedUsername = Cookies.get(\"username\");\n\n        // Ищем аккаунт с совпадающим юзернеймом\n        const matchedAccount = accounts.find(account => account.username === savedUsername);\n        if (matchedAccount) {\n          // Если нашли аккаунт с совпадающим юзернеймом, сохраняем айди юзера и обновляем юзернейм\n          setUserId(matchedAccount.id);\n          setUsername(savedUsername); // Обновляем состояние с юзернеймом\n        }\n      }).catch(error => {\n        console.error(\"Error fetching user data:\", error);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // Получаем токен из куки\n    const tokenFromCookie = Cookies.get(\"token\");\n    if (tokenFromCookie && userId) {\n      // Выполняем GET-запрос для получения данных пользователя по его идентификатору\n      axios.get(`http://localhost:8080/customers/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${tokenFromCookie}`\n        }\n      }).then(response => {\n        // Устанавливаем данные пользователя в состояние\n        console.log(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching user data:\", error);\n      });\n    }\n  }, [userId]); // Эффект срабатывает при изменении userId\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error_message,\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSignup,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_group,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.form_label,\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.form_input,\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_group,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_group,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_group,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_group,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_group,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.form_group} ${styles.phoneWrapper}`,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.form_label,\n          children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.phoneWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              className: styles.form_select,\n              value: selectedCountry ? selectedCountry.phoneCode : '',\n              onChange: e => {\n                const phoneCode = e.target.value;\n                setSelectedCountry(countryCodes.find(country => country.phoneCode === phoneCode));\n                setPhoneCode(phoneCode); // Обновляем выбранный код страны\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), countryCodes.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: country.phoneCode,\n                children: selectedCountry && selectedCountry.phoneCode === country.phoneCode ? ` (+${country.phoneCode})` : `${country.name} (+${country.phoneCode})`\n              }, country.phoneCode, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.form_input,\n              type: \"text\",\n              value: phone,\n              onChange: e => setPhone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_group,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: address,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.form_button,\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"uB7oqIHALoTIK866xp8ZcfMdjjg=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","styles","Cookies","jsxDEV","_jsxDEV","Signup","_s","navigate","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","phoneCode","setPhoneCode","phone","setPhone","address","setAddress","error","setError","selectedCountry","setSelectedCountry","userId","setUserId","countryCodes","name","countryCode","img","handleSignup","e","preventDefault","trimmedUsername","trim","trimmedEmail","trimmedFirstName","trimmedLastName","trimmedPhone","trimmedAdress","Error","usernameRegex","match","length","emailRegex","phoneNumberRegex","remove","response","post","first_name","last_name","console","log","data","set","token","status","tokenFromCookie","get","headers","Authorization","then","accounts","savedUsername","matchedAccount","find","account","id","catch","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","error_message","message","form","onSubmit","form_group","form_label","form_input","type","value","onChange","target","phoneWrapper","form_select","country","map","form_button","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/Login/SignUp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './Signup.module.css';\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phoneCode, setPhoneCode] = useState(''); // State for the selected country code\r\n  const [phone, setPhone] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n\r\n\r\n  const countryCodes = [\r\n    { phoneCode: '1', name: 'United States', countryCode: 'US', img: './images/x' },\r\n    { phoneCode: '91', name: 'India', countryCode: 'IN' },\r\n    { phoneCode: '44', name: 'United Kingdom', countryCode: 'UK' },\r\n    // Add more country codes as needed\r\n  ];\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const trimmedUsername = username.trim();\r\n    const trimmedEmail = email.trim();\r\n    const trimmedFirstName = firstName.trim();\r\n    const trimmedLastName = lastName.trim();\r\n    const trimmedPhone = phone.trim();\r\n    const trimmedAdress = address.trim();\r\n\r\n    // Validate required fields\r\n    if (!trimmedUsername || !trimmedEmail || !trimmedFirstName || !trimmedLastName || !trimmedPhone || !trimmedAdress) {\r\n      setError(new Error('Please fill in all required fields'));\r\n      return;\r\n    }\r\n    // Validate passwords\r\n    if (password !== confirmPassword) {\r\n      setError(new Error('Passwords do not match'));\r\n      return;\r\n    }\r\n\r\n    // Validate username (only Latin characters allowed)\r\n    const usernameRegex = /^[a-zA-Z0-9_]+$/;\r\n    if (!username.match(usernameRegex)) {\r\n      setError(new Error('Username should only contain Latin characters, numbers, and underscores'));\r\n      return;\r\n    }\r\n\r\n    if (username.length > 10) {\r\n      setError(new Error('Username should not be longer than 10 characters'));\r\n      return;\r\n    }\r\n\r\n    // Validate email format\r\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\r\n    if (!email.match(emailRegex)) {\r\n      setError(new Error('Invalid email format'));\r\n      return;\r\n    }\r\n\r\n    const phoneNumberRegex = /^\\d+$/;\r\n    if (!trimmedPhone.match(phoneNumberRegex)) {\r\n      setError(new Error('Phone number should contain only numbers'));\r\n      return;\r\n    }\r\n\r\n    if (!selectedCountry) {\r\n      setError(new Error('Please select a country code'));\r\n      return;\r\n    }\r\n\r\n\r\n    if (!selectedCountry) {\r\n      setError(new Error('Please select a country code'));\r\n      return;\r\n    }\r\n    Cookies.remove('token');\r\n\r\n    try {\r\n      // Call the API to register the user\r\n      const response = await axios.post('http://localhost:8080/auth/signup', {\r\n        username: trimmedUsername,\r\n        email: trimmedEmail,\r\n        password: password,\r\n        first_name: trimmedFirstName,\r\n        last_name: trimmedLastName,\r\n        phone: `${phoneCode}${trimmedPhone}`,\r\n        address: trimmedAdress,\r\n      });\r\n\r\n      console.log('Signup successful:', response.data);\r\n      console.log(`+${phoneCode}${trimmedPhone}`)\r\n\r\n      Cookies.set('token', response.data.token);\r\n\r\n      // Redirect to the login page after successful signup\r\n      navigate('/');\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setError(new Error(error.response.data)); // Set the error message from the server response\r\n      } else {\r\n        setError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    // Получаем токен из куки\r\n    const tokenFromCookie = Cookies.get(\"token\");\r\n\r\n    if (tokenFromCookie) {\r\n      console.log(tokenFromCookie)\r\n      // Выполняем GET-запрос для получения данных пользователя\r\n      axios\r\n        .get(\"http://localhost:8080/customers\", {\r\n          headers: {\r\n            Authorization: `Bearer ${tokenFromCookie}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          // Получаем массив аккаунтов\r\n          const accounts = response.data;\r\n\r\n          // Получаем сохраненный юзернейм из куки\r\n          const savedUsername = Cookies.get(\"username\");\r\n\r\n          // Ищем аккаунт с совпадающим юзернеймом\r\n          const matchedAccount = accounts.find(\r\n            (account) => account.username === savedUsername\r\n          );\r\n\r\n          if (matchedAccount) {\r\n            // Если нашли аккаунт с совпадающим юзернеймом, сохраняем айди юзера и обновляем юзернейм\r\n            setUserId(matchedAccount.id);\r\n            setUsername(savedUsername); // Обновляем состояние с юзернеймом\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user data:\", error);\r\n        });\r\n    }\r\n  }, []);   \r\n\r\n\r\n    useEffect(() => {\r\n      // Получаем токен из куки\r\n      const tokenFromCookie = Cookies.get(\"token\");\r\n\r\n      if (tokenFromCookie && userId) {\r\n        // Выполняем GET-запрос для получения данных пользователя по его идентификатору\r\n        axios\r\n          .get(`http://localhost:8080/customers/${userId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${tokenFromCookie}`,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            // Устанавливаем данные пользователя в состояние\r\n            console.log(response.data)\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching user data:\", error);\r\n          });\r\n      }\r\n    }, [userId]); // Эффект срабатывает при изменении userId\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>Sign Up</h2>\r\n      {error && <p className={styles.error_message}>Произошла ошибка: {error.message}</p>}\r\n      <form className={styles.form} onSubmit={handleSignup}>\r\n        <div className={styles.form_group}>\r\n          <label className={styles.form_label}>\r\n            Username:\r\n            <input\r\n              className={styles.form_input}\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Confirm Password:\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            First Name:\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Last Name:\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={`${styles.form_group} ${styles.phoneWrapper}`}>\r\n          <label className={styles.form_label}>\r\n            Phone:\r\n            <div className={styles.phoneWrapper}>\r\n              <select\r\n                className={styles.form_select}\r\n                value={selectedCountry ? selectedCountry.phoneCode : ''}\r\n                onChange={(e) => {\r\n                  const phoneCode = e.target.value;\r\n                  setSelectedCountry(\r\n                    countryCodes.find((country) => country.phoneCode === phoneCode)\r\n                  );\r\n                  setPhoneCode(phoneCode); // Обновляем выбранный код страны\r\n                }}\r\n              >\r\n                <option value=\"\">Select option</option>\r\n                {countryCodes.map((country) => (\r\n                  <option key={country.phoneCode} value={country.phoneCode}>\r\n                    {selectedCountry && selectedCountry.phoneCode === country.phoneCode\r\n                      ? ` (+${country.phoneCode})`\r\n                      : `${country.name} (+${country.phoneCode})`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <input\r\n                className={styles.form_input}\r\n                type=\"text\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Address:\r\n            <input\r\n              type=\"text\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button className={styles.form_button} type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}