{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\newCard\\\\NewCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from './newCard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCard = props => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\"); // Состояние для хранения значения ввода\n  const [error, setError] = useState(\"\"); // Состояние для хранения ошибки\n\n  // Функция для проверки валидности формы\n  const isFormValid = () => {\n    // Проверка на наличие текста\n    if (inputValue.trim() === \"\") {\n      setError(\"Please enter card holder's name\");\n      return false;\n    }\n\n    // Проверка на маленькие буквы и пробелы\n    const regex = /^[a-z\\s]+$/;\n    if (!regex.test(inputValue)) {\n      setError(\"Only lowercase letters and spaces are allowed\");\n      return false;\n    }\n    setError(\"\"); // Очистить ошибку, если ввод валиден\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add new card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.addingNewCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputInf,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Enter please card's holder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.inputForCardNumber,\n          type: \"text\",\n          placeholder: \"Nick Johnson\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.formButton} ${isFormValid() ? styles.formButtonActive : ''}`,\n        type: \"submit\",\n        onClick: () => props.onConfirm(props),\n        disabled: !isFormValid() // Деактивируйте кнопку, если форма недействительна\n        ,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCard, \"2gnY1rjcLROuajUL/GMbqfu4lbo=\");\n_c = NewCard;\nexport default NewCard;\nvar _c;\n$RefreshReg$(_c, \"NewCard\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","NewCard","props","_s","inputValue","setInputValue","error","setError","isFormValid","trim","regex","test","className","wrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","addingNewCard","inputInf","inputForCardNumber","type","placeholder","value","onChange","e","target","formButton","formButtonActive","onClick","onConfirm","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/newCard/NewCard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from './newCard.module.css'\r\n\r\nconst NewCard = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\"); // Состояние для хранения значения ввода\r\n  const [error, setError] = useState(\"\"); // Состояние для хранения ошибки\r\n\r\n  // Функция для проверки валидности формы\r\n  const isFormValid = () => {\r\n    // Проверка на наличие текста\r\n    if (inputValue.trim() === \"\") {\r\n      setError(\"Please enter card holder's name\");\r\n      return false;\r\n    }\r\n    \r\n    // Проверка на маленькие буквы и пробелы\r\n    const regex = /^[a-z\\s]+$/;\r\n    if (!regex.test(inputValue)) {\r\n      setError(\"Only lowercase letters and spaces are allowed\");\r\n      return false;\r\n    }\r\n    \r\n    setError(\"\"); // Очистить ошибку, если ввод валиден\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper} >\r\n      <h1>Add new card</h1>\r\n      <div className={styles.addingNewCard}>\r\n        <div className={styles.inputInf}>\r\n          <span>Enter please card's holder</span>\r\n          <input\r\n            className={styles.inputForCardNumber}\r\n            type=\"text\"\r\n            placeholder=\"Nick Johnson\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {/* Отображение ошибки */}\r\n        {error && <div className={styles.error}>{error}</div>}\r\n\r\n        <button\r\n          className={`${styles.formButton} ${isFormValid() ? styles.formButtonActive : ''}`}\r\n          type=\"submit\"\r\n          onClick={() => props.onConfirm(props)}\r\n          disabled={!isFormValid()} // Деактивируйте кнопку, если форма недействительна\r\n        >\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}