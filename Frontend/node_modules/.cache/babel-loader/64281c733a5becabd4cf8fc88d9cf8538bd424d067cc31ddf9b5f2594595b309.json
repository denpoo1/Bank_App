{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0418\\u043B\\u044C\\u044F\\\\Desktop\\\\Bank_App\\\\Frontend\\\\src\\\\Body\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from './Body.module.css';\nimport BodyWrap from '../Wrap/BodyWrap';\nimport TotalBalance from \"../TotalBalance/TotalBalance\";\nimport MarketButtons from \"../MarketButtons/MarketButtons\";\nimport Card from '../Card/Card';\nimport Currency from \"../Currency/Currency\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport AppExpenses from \"../Components/Expenses/AppExpenses\";\nimport baseURL from \"../config\"; // Импортируем базовый URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [cards, setCards] = useState([null]);\n  const [selectedCardId, setSelectedCardId] = useState(null);\n  const [arrayOfExpenses, setArrayOfExpenses] = useState([null]);\n  useEffect(() => {\n    const token = Cookies.get('token');\n    const username = Cookies.get('username');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get(`${baseUrl}customers`, {\n      headers\n    }).then(response => {\n      const matchingUser = response.data.find(user => user.username === username);\n      if (matchingUser) {\n        setUserId(matchingUser.id);\n      }\n    }).catch(error => {\n      console.error('Error fetching customer data', error);\n    });\n    if (userId !== null) {\n      axios.get(`${baseUrl}customers/${userId}/credit-cards`, {\n        headers\n      }).then(response => {\n        setCards(response.data);\n      }).catch(error => {\n        console.error('Error fetching credit cards data', error);\n      });\n    }\n    axios.get(`${baseUrl}transactions`, {\n      headers\n    }).then(res => {\n      const transactions = res.data;\n      transactions.forEach(transaction => {\n        transaction.date = new Date(transaction.date);\n      });\n      const expenses = transactions.filter(transaction => transaction.fromCardId === selectedCardId);\n      const updatedExpenses = expenses.map(expense => {\n        if (expense.transferType === \"CARD_TO_CARD\" && cards && cards.length > 0 && expense.toCardId !== null) {\n          const card = cards.find(card => card.id === expense.toCardId);\n          if (card) {\n            return {\n              ...expense,\n              title: `Transfer to Card ${card.billingAddress}`\n            };\n          }\n        }\n        return expense;\n      });\n      setArrayOfExpenses(updatedExpenses);\n    });\n  }, [selectedCardId, userId, cards]);\n  const handleCardSelection = cardId => {\n    setSelectedCardId(cardId);\n  };\n  useEffect(() => {\n    const token = Cookies.get('token');\n    const username = Cookies.get('username');\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    axios.get(`${baseUrl}customers`, {\n      headers\n    }).then(response => {\n      const matchingUser = response.data.find(user => user.username === username);\n      if (matchingUser) {\n        axios.get(`${baseUrl}customers/${matchingUser.id}/credit-cards`, {\n          headers\n        }).then(response => {\n          const userCards = response.data;\n          if (userCards.length > 0) {\n            setSelectedCardId(userCards[0].id);\n          }\n        }).catch(error => {\n          console.error('An error occurred while fetching user card data', error);\n        });\n      }\n    }).catch(error => {\n      console.error('Error fetching customer data', error);\n    });\n  }, []);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleModalToggle = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thirdRow,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.firstRow,\n          children: [/*#__PURE__*/_jsxDEV(TotalBalance, {\n            cardId: selectedCardId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MarketButtons, {\n            onModalToggle: handleModalToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.secondRow,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            onCardSelect: handleCardSelection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Currency, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AppExpenses, {\n        items: arrayOfExpenses,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(Body, \"arors6i0IzD+vnaPu7Op9UgB8S0=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","styles","BodyWrap","TotalBalance","MarketButtons","Card","Currency","axios","Cookies","AppExpenses","baseURL","jsxDEV","_jsxDEV","Body","_s","userId","setUserId","cards","setCards","selectedCardId","setSelectedCardId","arrayOfExpenses","setArrayOfExpenses","token","get","username","headers","Authorization","baseUrl","then","response","matchingUser","data","find","user","id","catch","error","console","res","transactions","forEach","transaction","date","Date","expenses","filter","fromCardId","updatedExpenses","map","expense","transferType","length","toCardId","card","title","billingAddress","handleCardSelection","cardId","userCards","isModalOpen","setIsModalOpen","handleModalToggle","children","className","thirdRow","firstRow","fileName","_jsxFileName","lineNumber","columnNumber","onModalToggle","secondRow","onCardSelect","items","_c","$RefreshReg$"],"sources":["C:/Users/Илья/Desktop/Bank_App/Frontend/src/Body/Body.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from './Body.module.css';\r\nimport BodyWrap from '../Wrap/BodyWrap'\r\nimport TotalBalance from \"../TotalBalance/TotalBalance\";\r\nimport MarketButtons from \"../MarketButtons/MarketButtons\";\r\nimport Card from '../Card/Card';\r\nimport Currency from \"../Currency/Currency\";\r\nimport axios from \"axios\"; \r\nimport Cookies from \"js-cookie\"; \r\nimport AppExpenses from \"../Components/Expenses/AppExpenses\";\r\nimport baseURL from \"../config\"; // Импортируем базовый URL\r\n\r\nconst Body = () => {\r\n    const [userId, setUserId] = useState(null);\r\n    const [cards, setCards] = useState([null]);\r\n    const [selectedCardId, setSelectedCardId] = useState(null);\r\n    const [arrayOfExpenses, setArrayOfExpenses] = useState([null])\r\n    useEffect(() => {\r\n        const token = Cookies.get('token');\r\n        const username = Cookies.get('username');\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n        axios.get(`${baseUrl}customers`, { headers })\r\n            .then(response => {\r\n                const matchingUser = response.data.find(user => user.username === username);\r\n                if (matchingUser) {\r\n                    setUserId(matchingUser.id);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching customer data', error);\r\n            });\r\n        if (userId !== null) {\r\n            axios.get(`${baseUrl}customers/${userId}/credit-cards`, { headers })\r\n                .then(response => {\r\n                    setCards(response.data)\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching credit cards data', error);\r\n\r\n                });\r\n        }\r\n        axios.get(`${baseUrl}transactions`, { headers }).then(\r\n            (res) => {\r\n                const transactions = res.data;\r\n    \r\n                transactions.forEach(transaction => {\r\n                    transaction.date = new Date(transaction.date);\r\n                });\r\n    \r\n                const expenses = transactions.filter(transaction => transaction.fromCardId === selectedCardId);\r\n                const updatedExpenses = expenses.map(expense => {\r\n                    if (\r\n                        expense.transferType === \"CARD_TO_CARD\" && \r\n                        cards && \r\n                        cards.length > 0 && \r\n                        expense.toCardId !== null\r\n                    ) {\r\n                        \r\n                        const card = cards.find(card => card.id === expense.toCardId);\r\n                        if (card) {\r\n                            return { ...expense, title: `Transfer to Card ${card.billingAddress}` };\r\n                        }\r\n                    }\r\n                    return expense; \r\n                });\r\n                \r\n                \r\n                \r\n                \r\n    \r\n                setArrayOfExpenses(updatedExpenses);\r\n            }\r\n        )\r\n    }, [selectedCardId, userId, cards]);\r\n\r\n\r\n\r\n    const handleCardSelection = (cardId) => {\r\n        setSelectedCardId(cardId);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = Cookies.get('token');\r\n        const username = Cookies.get('username');\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`\r\n        };\r\n        axios.get(`${baseUrl}customers`, { headers })\r\n            .then(response => {\r\n                const matchingUser = response.data.find(user => user.username === username);\r\n\r\n                if (matchingUser) {\r\n\r\n                    axios.get(`${baseUrl}customers/${matchingUser.id}/credit-cards`, { headers })\r\n                        .then(response => {\r\n                            const userCards = response.data;\r\n                            if (userCards.length > 0) {\r\n                                setSelectedCardId(userCards[0].id);\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('An error occurred while fetching user card data', error);\r\n                        });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching customer data', error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const handleModalToggle = () => {\r\n        setIsModalOpen(!isModalOpen);\r\n    };\r\n    return (\r\n\r\n        <BodyWrap>\r\n            <div className={styles.thirdRow}>\r\n                <div>\r\n                    <div className={styles.firstRow}>\r\n                        <TotalBalance cardId={selectedCardId} />\r\n                        <MarketButtons onModalToggle={handleModalToggle} />\r\n                    </div>\r\n\r\n                    <div className={styles.secondRow}>\r\n                        <Card onCardSelect={handleCardSelection} />\r\n                        <Currency />\r\n                    </div>\r\n                </div>\r\n                <AppExpenses items={arrayOfExpenses}> </AppExpenses>\r\n            </div>\r\n        </BodyWrap>\r\n    )\r\n}\r\n\r\nexport default Body;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}