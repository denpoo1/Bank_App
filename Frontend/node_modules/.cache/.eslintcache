[{"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\index.js":"1","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\App.js":"2","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Body\\Body.js":"4","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Header\\Header.js":"5","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Sidebar.js":"6","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarFooter.js":"7","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Currency\\Currency.js":"8","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Logo.js":"9","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarNavigation.js":"10","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\Wrap.js":"11","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Card\\Card.js":"12","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\Login.js":"13","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\SignUp.js":"14","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\BankPages\\MainPage.js":"15","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\LeftSideLogin\\LeftSideLogin.js":"16","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\RightSideLogin\\RightSideLogin.js":"17","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\TotalBalance\\TotalBalance.js":"18","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\BodyWrap.js":"19","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\MarketButtons\\MarketButtons.js":"20"},{"size":552,"mtime":1690979537277,"results":"21","hashOfConfig":"22"},{"size":518,"mtime":1691767369642,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1690383299987,"results":"24","hashOfConfig":"22"},{"size":710,"mtime":1690831981263,"results":"25","hashOfConfig":"22"},{"size":4105,"mtime":1691767848974,"results":"26","hashOfConfig":"22"},{"size":437,"mtime":1690383299976,"results":"27","hashOfConfig":"22"},{"size":648,"mtime":1690383299976,"results":"28","hashOfConfig":"22"},{"size":2247,"mtime":1691767369648,"results":"29","hashOfConfig":"22"},{"size":423,"mtime":1690383299975,"results":"30","hashOfConfig":"22"},{"size":1250,"mtime":1690383299977,"results":"31","hashOfConfig":"22"},{"size":219,"mtime":1690383299979,"results":"32","hashOfConfig":"22"},{"size":1753,"mtime":1691767369646,"results":"33","hashOfConfig":"22"},{"size":356,"mtime":1691767369658,"results":"34","hashOfConfig":"22"},{"size":7420,"mtime":1691767369761,"results":"35","hashOfConfig":"22"},{"size":389,"mtime":1691767369644,"results":"36","hashOfConfig":"22"},{"size":2685,"mtime":1691767369656,"results":"37","hashOfConfig":"22"},{"size":2650,"mtime":1691767369755,"results":"38","hashOfConfig":"22"},{"size":1957,"mtime":1691767369773,"results":"39","hashOfConfig":"22"},{"size":229,"mtime":1691767369777,"results":"40","hashOfConfig":"22"},{"size":1130,"mtime":1691767369770,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1sckmze",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\index.js",[],[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\App.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Body\\Body.js",[],[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Header\\Header.js",["106"],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Sidebar.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarFooter.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Currency\\Currency.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Logo.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarNavigation.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\Wrap.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Card\\Card.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\Login.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\SignUp.js",["107"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './Signup.module.css';\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phoneCode, setPhoneCode] = useState(''); // State for the selected country code\r\n  const [phone, setPhone] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n\r\n\r\n  const countryCodes = [\r\n    { phoneCode: '1', name: 'United States', countryCode: 'US', img: './images/x'},\r\n    { phoneCode: '91', name: 'India', countryCode: 'IN' },\r\n    { phoneCode: '44', name: 'United Kingdom', countryCode: 'UK' },\r\n    // Add more country codes as needed\r\n  ];\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const trimmedUsername = username.trim();\r\n    const trimmedEmail = email.trim();\r\n    const trimmedFirstName = firstName.trim();\r\n    const trimmedLastName = lastName.trim();\r\n    const trimmedPhone = phone.trim();\r\n    const trimmedAdress = address.trim();\r\n  \r\n    // Validate required fields\r\n    if (!trimmedUsername || !trimmedEmail || !trimmedFirstName || !trimmedLastName || !trimmedPhone || !trimmedAdress) {\r\n      setError(new Error('Please fill in all required fields'));\r\n      return;\r\n    }\r\n    // Validate passwords\r\n    if (password !== confirmPassword) {\r\n      setError(new Error('Passwords do not match'));\r\n      return;\r\n    }\r\n\r\n    // Validate username (only Latin characters allowed)\r\n    const usernameRegex = /^[a-zA-Z0-9_]+$/;\r\n  if (!username.match(usernameRegex)) {\r\n    setError(new Error('Username should only contain Latin characters, numbers, and underscores'));\r\n    return;\r\n  }\r\n\r\n  if (username.length > 10) {\r\n    setError(new Error('Username should not be longer than 10 characters'));\r\n    return;\r\n  }\r\n\r\n    // Validate email format\r\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\r\n    if (!email.match(emailRegex)) {\r\n      setError(new Error('Invalid email format'));\r\n      return;\r\n    }\r\n\r\n    const phoneNumberRegex = /^\\d+$/;\r\n    if (!trimmedPhone.match(phoneNumberRegex)) {\r\n      setError(new Error('Phone number should contain only numbers'));\r\n      return;\r\n    }\r\n\r\n    if (!selectedCountry) {\r\n      setError(new Error('Please select a country code'));\r\n      return;\r\n    }\r\n\r\n\r\n    if (!selectedCountry) {\r\n      setError(new Error('Please select a country code'));\r\n      return;\r\n    }\r\n    try {\r\n      // Call the API to register the user\r\n      const response = await axios.post('http://localhost:8080/auth/signup', {\r\n        username: trimmedUsername,\r\n        email: trimmedEmail,\r\n        password: password,\r\n        first_name: trimmedFirstName,\r\n        last_name: trimmedLastName,\r\n        phone: `+${phoneCode}${trimmedPhone}`,\r\n        address: trimmedAdress,\r\n      });\r\n\r\n      console.log('Signup successful:', response.data);\r\n      console.log(phone)\r\n\r\n      // Redirect to the login page after successful signup\r\n      navigate('/');\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setError(new Error(error.response.data)); // Set the error message from the server response\r\n      } else {\r\n        setError(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>Sign Up</h2>\r\n      {error && <p className={styles.error_message}>Произошла ошибка: {error.message}</p>}\r\n      <form className={styles.form} onSubmit={handleSignup}>\r\n        <div className={styles.form_group}>\r\n          <label className={styles.form_label}>\r\n            Username:\r\n            <input\r\n              className={styles.form_input}\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Confirm Password:\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            First Name:\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Last Name:\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={`${styles.form_group} ${styles.phoneWrapper}`}>\r\n        <label className={styles.form_label}>\r\n          Phone:\r\n          <div className={styles.phoneWrapper}>\r\n            <select\r\n              className={styles.form_select}\r\n              value={selectedCountry ? selectedCountry.phoneCode : ''}\r\n              onChange={(e) => {\r\n                const phoneCode = e.target.value;\r\n                setSelectedCountry(\r\n                  countryCodes.find((country) => country.phoneCode === phoneCode)\r\n                );\r\n              }}\r\n            >\r\n              <option value=\"\">Select option</option>\r\n              {countryCodes.map((country) => (\r\n                <option key={country.phoneCode} value={country.phoneCode}>\r\n                  {selectedCountry && selectedCountry.phoneCode === country.phoneCode\r\n                    ? ` (+${country.phoneCode})`\r\n                    : `${country.name} (+${country.phoneCode})`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <input\r\n              className={styles.form_input}\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </div>\r\n        </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Address:\r\n            <input\r\n              type=\"text\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button className={styles.form_button} type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\BankPages\\MainPage.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\LeftSideLogin\\LeftSideLogin.js",["108","109"],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\RightSideLogin\\RightSideLogin.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\TotalBalance\\TotalBalance.js",["110","111"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TotalBalance.module.css\";\r\nimport Wrap from \"../Wrap/Wrap\";\r\n\r\nconst TotalBalance = () => {\r\n  // Sample data for income and expenses\r\n  const [income, setIncome] = useState(400);\r\n  const [expenses, setExpenses] = useState(5000);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [isPositive, setIsPositive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Calculate the percentage\r\n    const calculatedPercentage =\r\n      expenses === 0\r\n        ? income * 100\r\n        : (((income - expenses) / expenses) * 100).toFixed(2);\r\n    setPercentage(calculatedPercentage);\r\n    setIsPositive(calculatedPercentage >= 0);\r\n  }, [income, expenses]);\r\n\r\n  return (\r\n    <Wrap className={styles.wrapperTotalBAlance}>\r\n      {/* Your other content */}\r\n      <h1 className={styles.amountTitle}>Balance</h1>\r\n      <div className={styles.amountWrapper}>\r\n        <span className={styles.amount}>\r\n          $120<span>.20</span>\r\n        </span>\r\n        <div\r\n          className={styles.amountPercentageWrapper}\r\n          style={{\r\n            backgroundColor: isPositive\r\n              ? percentage > 0\r\n                ? \"#07f8b5\"\r\n                : \"#b3b3b3\"\r\n              : \"#FE0738\",\r\n          }}\r\n        >\r\n          {percentage !== 0 ? ( // Conditionally render the triangle when percentage is not 0\r\n            <span className={styles.triangle}>\r\n              {isPositive ? <>&#9650;</> : <>&#9660;</>}\r\n            </span>\r\n          ) : null}\r\n          <span className={styles.amountPercentage}>\r\n            {percentage !== 0 ? Math.abs(percentage) + \"%\" : \"N/A\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.spendingsWrapper}>\r\n        <span className={styles.income}>${income}</span>\r\n        <span className={styles.expenses}>${expenses}</span>\r\n      </div>\r\n    </Wrap>\r\n\r\n    \r\n  );\r\n};\r\n\r\n\r\nexport default TotalBalance;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\BodyWrap.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\MarketButtons\\MarketButtons.js",[],[],{"ruleId":"112","severity":1,"message":"113","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":18},{"ruleId":"112","severity":1,"message":"116","line":14,"column":21,"nodeType":"114","messageId":"115","endLine":14,"endColumn":33},{"ruleId":"112","severity":1,"message":"117","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":22},{"ruleId":"112","severity":1,"message":"118","line":13,"column":8,"nodeType":"114","messageId":"115","endLine":13,"endColumn":14},{"ruleId":"112","severity":1,"message":"119","line":7,"column":18,"nodeType":"114","messageId":"115","endLine":7,"endColumn":27},{"ruleId":"112","severity":1,"message":"120","line":8,"column":20,"nodeType":"114","messageId":"115","endLine":8,"endColumn":31},"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","'setPhoneCode' is assigned a value but never used.","'logingCardLogo' is defined but never used.","'logo10' is defined but never used.","'setIncome' is assigned a value but never used.","'setExpenses' is assigned a value but never used."]