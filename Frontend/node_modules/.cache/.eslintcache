[{"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\index.js":"1","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\App.js":"2","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Body\\Body.js":"4","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Header\\Header.js":"5","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Sidebar.js":"6","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarFooter.js":"7","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Currency\\Currency.js":"8","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Logo.js":"9","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarNavigation.js":"10","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\Wrap.js":"11","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Card\\Card.js":"12","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\Login.js":"13","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\SignUp.js":"14","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\BankPages\\MainPage.js":"15","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\LeftSideLogin\\LeftSideLogin.js":"16","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\RightSideLogin\\RightSideLogin.js":"17","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\TotalBalance\\TotalBalance.js":"18","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\BodyWrap.js":"19","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\MarketButtons\\MarketButtons.js":"20","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Modal\\Module.js":"21"},{"size":552,"mtime":1690979537277,"results":"22","hashOfConfig":"23"},{"size":518,"mtime":1692563062929,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1690383299987,"results":"25","hashOfConfig":"23"},{"size":2077,"mtime":1692401010665,"results":"26","hashOfConfig":"23"},{"size":4456,"mtime":1692563062951,"results":"27","hashOfConfig":"23"},{"size":437,"mtime":1690383299976,"results":"28","hashOfConfig":"23"},{"size":648,"mtime":1690383299976,"results":"29","hashOfConfig":"23"},{"size":2247,"mtime":1691767369648,"results":"30","hashOfConfig":"23"},{"size":423,"mtime":1690383299975,"results":"31","hashOfConfig":"23"},{"size":1250,"mtime":1692563062955,"results":"32","hashOfConfig":"23"},{"size":219,"mtime":1690383299979,"results":"33","hashOfConfig":"23"},{"size":7554,"mtime":1692279413051,"results":"34","hashOfConfig":"23"},{"size":390,"mtime":1692279413063,"results":"35","hashOfConfig":"23"},{"size":9112,"mtime":1692279413074,"results":"36","hashOfConfig":"23"},{"size":388,"mtime":1692401010664,"results":"37","hashOfConfig":"23"},{"size":2685,"mtime":1691767369656,"results":"38","hashOfConfig":"23"},{"size":2650,"mtime":1691767369755,"results":"39","hashOfConfig":"23"},{"size":3948,"mtime":1692563062957,"results":"40","hashOfConfig":"23"},{"size":229,"mtime":1691767369777,"results":"41","hashOfConfig":"23"},{"size":14330,"mtime":1692563673361,"results":"42","hashOfConfig":"23"},{"size":1398,"mtime":1692401010673,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1ymoufl",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"47"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\index.js",[],[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\App.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Body\\Body.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Header\\Header.js",["112"],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Sidebar.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarFooter.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Currency\\Currency.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Logo.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarNavigation.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\Wrap.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Card\\Card.js",["113","114"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Card.module.css\";\r\nimport Wrap from \"../Wrap/Wrap\";\r\nimport settingsSign from \"../images/other/settings.png\";\r\nimport map from '../images/card/map.png';\r\nimport chip from '../images/card/chip.png';\r\nimport visa from '../images/card/visa.png';\r\nimport right from '../images/cardArrows/rightActive.png';\r\nimport left from '../images/cardArrows/leftActive.png';\r\nimport addCard from '../images/cardArrows/addCard.png';\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Card = ({ onCardSelect }) => {\r\n  const [cards, setCards] = useState([]);\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const isOnFirstCard = currentCardIndex === 0;\r\n  const isOnLastCard = currentCardIndex === cards.length - 1;\r\n  const [userID, setUserID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = Cookies.get('token');\r\n    const username = Cookies.get('username');\r\n    \r\n    const headers = {\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n\r\n    // First, fetch all customers to find the matching username\r\n    axios.get(\"http://localhost:8080/customers\", { headers })\r\n      .then(response => {\r\n        const matchingUser = response.data.find(user => user.username === username);\r\n        if (matchingUser) {\r\n          // Set the userID if the username matches\r\n          setUserID(matchingUser.id);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching customer data', error);\r\n      });\r\n\r\n    // Then, fetch credit cards for the specific user (if userID is set)\r\n    if (userID !== null) {\r\n      axios.get(`http://localhost:8080/customers/${userID}/credit-cards`, { headers })\r\n        .then(response => {\r\n          setCards(response.data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching credit cards data', error);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [userID]);\r\n\r\n  useEffect(() => {\r\n    if (isAnimating) {\r\n      setTimeout(() => {\r\n        setIsAnimating(false);\r\n      }, 300); // Задержка в миллисекундах (0.3 секунды)\r\n    }\r\n  }, [isAnimating]);\r\n\r\n  const handlePrevCard = () => {\r\n    if (!isAnimating && currentCardIndex > 0) {\r\n      setIsAnimating(true);\r\n      setTimeout(() => {\r\n        setCurrentCardIndex(currentCardIndex - 1);\r\n        setIsAnimating(false);\r\n        // Обновляем текущую карту в родительском компоненте\r\n        onCardSelect(cards[currentCardIndex - 1].id);\r\n      }, 300); // Задержка в миллисекундах (0.3 секунды)\r\n    }\r\n  };\r\n\r\n  const handleNextCard = () => {\r\n    if (!isAnimating && currentCardIndex < cards.length - 1) {\r\n      setIsAnimating(true);\r\n      setTimeout(() => {\r\n        setCurrentCardIndex(currentCardIndex + 1);\r\n        setIsAnimating(false);\r\n        // Обновляем текущую карту в родительском компоненте\r\n        onCardSelect(cards[currentCardIndex + 1].id);\r\n      }, 300); // Задержка в миллисекундах (0.3 секунды)\r\n    }\r\n  };\r\n\r\n  // Функция для обработки создания новой карты (пока заглушка)\r\n  const handleCreateCard = () => {\r\n    console.log(\"Создание новой карты...\");\r\n  };\r\n\r\n  const formatDate = (dateStr) => {\r\n    const dateObject = new Date(dateStr);\r\n    const year = dateObject.getFullYear();\r\n    const month = (dateObject.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dateObject.getDate().toString().padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  const currentCard = cards[currentCardIndex];\r\n  const formattedExpirationDate = currentCard ? formatDate(currentCard.expirationDate) : '';\r\n\r\n\r\n  const formatCardNumber = (cardNumber) => {\r\n    if (typeof cardNumber === 'number') {\r\n      const formattedNumber = cardNumber.toString().replace(/\\s/g, ''); // Преобразуем в строку и удаляем пробелы, если они уже есть\r\n      const groups = [];\r\n      for (let i = 0; i < formattedNumber.length; i += 4) {\r\n        groups.push(formattedNumber.substring(i, i + 4));\r\n      }\r\n      return groups.join(' '); // Соединяем группы цифр с пробелами между ними\r\n    } else {\r\n      return ''; // Если cardNumber не является числом, возвращаем пустую строку\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Wrap className={styles.cardWrapper}>\r\n      <div className={styles.titleWrapper}>\r\n        <h1>Card Lists</h1>\r\n        <button className={styles.settingSignButton}>\r\n          <img\r\n            className={styles.settingSign}\r\n            src={settingsSign}\r\n            alt=\"Settings Card\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <div className={styles.container}>\r\n        {currentCard && (\r\n          <div className={styles.cardButtonsContainer}>\r\n            <button\r\n              className={`${styles.cardButtons} ${styles.leftButton} ${isOnFirstCard ? styles.transparentButton : \"\"\r\n                }`}\r\n              onClick={handlePrevCard}\r\n              disabled={isOnFirstCard}\r\n            >\r\n              <img src={left} alt=\"Previous\" />\r\n            </button>\r\n            <div className={styles.card} style={{ opacity: isAnimating ? 0 : 1 }}>\r\n              <div className={`${styles.front} ${styles.card_inner}`} style={{ transform: `rotateY(${isAnimating ? 180 : 0}deg)`, opacity: isAnimating ? 0 : 1 }}>\r\n                <img src={map} className={styles.map_img} alt=\"map\" />\r\n                <div className={styles.row}>\r\n                  <img src={chip} width=\"40px\" alt=\"chip\" />\r\n                  <img src={visa} width=\"40px\" alt=\"visa\" />\r\n                </div>\r\n                <div className={`${styles.row} ${styles.card_no}`}>\r\n                  <p>{formatCardNumber(currentCard.cardNumber)}</p>\r\n                </div>\r\n                <div className={`${styles.row} ${styles.card_holder}`}>\r\n                  <div>\r\n                    <p className={styles.cardHolderText}>Card Holder:</p>\r\n                    <p className={styles.cardHolderValue}>{currentCard.billingAddress}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className={styles.expiryText}>Valid Till:</p>\r\n                    <p className={styles.expiryValue}>{formattedExpirationDate}</p>\r\n                  </div>\r\n                </div>\r\n                <div className={`${styles.row} ${styles.name}`}>\r\n                  <p>{currentCard.name}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {currentCardIndex === cards.length - 1 ? (\r\n              <button className={`${styles.cardButtons} ${styles.rightButton}`} onClick={handleCreateCard}>\r\n                <img src={addCard} alt=\"Create\" />\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className={`${styles.cardButtons} ${styles.createButton}`}\r\n                onClick={() => handleNextCard(currentCard.id)} // Передаем айдишник карты\r\n              >\r\n                <img src={right} alt=\"Next\" />\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\Login.js",["115"],[],"import styles from './Login.module.css'\r\nimport LeftSideLogin from './LeftSideLogin/LeftSideLogin';\r\nimport RightSideLogin from './RightSideLogin/RightSideLogin';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nconst Login = () => {\r\n  \r\n\r\n  return (\r\n    <div className={styles.loginWrapper}>\r\n      <LeftSideLogin />\r\n      <RightSideLogin />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\SignUp.js",["116","117","118"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './Signup.module.css';\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phoneCode, setPhoneCode] = useState(''); // State for the selected country code\r\n  const [phone, setPhone] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n\r\n\r\n  const countryCodes = [\r\n    { phoneCode: '1', name: 'United States', countryCode: 'US', img: './images/x' },\r\n    { phoneCode: '91', name: 'India', countryCode: 'IN' },\r\n    { phoneCode: '44', name: 'United Kingdom', countryCode: 'UK' },\r\n    // Add more country codes as needed\r\n  ];\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const trimmedUsername = username.trim();\r\n    const trimmedEmail = email.trim();\r\n    const trimmedFirstName = firstName.trim();\r\n    const trimmedLastName = lastName.trim();\r\n    const trimmedPhone = phone.trim();\r\n    const trimmedAdress = address.trim();\r\n\r\n    // Validate required fields\r\n    if (!trimmedUsername || !trimmedEmail || !trimmedFirstName || !trimmedLastName || !trimmedPhone || !trimmedAdress) {\r\n      setError(new Error('Please fill in all required fields'));\r\n      return;\r\n    }\r\n    // Validate passwords\r\n    if (password !== confirmPassword) {\r\n      setError(new Error('Passwords do not match'));\r\n      return;\r\n    }\r\n\r\n    // Validate username (only Latin characters allowed)\r\n    const usernameRegex = /^[a-zA-Z0-9_]+$/;\r\n    if (!username.match(usernameRegex)) {\r\n      setError(new Error('Username should only contain Latin characters, numbers, and underscores'));\r\n      return;\r\n    }\r\n\r\n    if (username.length > 10) {\r\n      setError(new Error('Username should not be longer than 10 characters'));\r\n      return;\r\n    }\r\n\r\n    // Validate email format\r\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\r\n    if (!email.match(emailRegex)) {\r\n      setError(new Error('Invalid email format'));\r\n      return;\r\n    }\r\n\r\n    const phoneNumberRegex = /^\\d+$/;\r\n    if (!trimmedPhone.match(phoneNumberRegex)) {\r\n      setError(new Error('Phone number should contain only numbers'));\r\n      return;\r\n    }\r\n\r\n    if (!selectedCountry) {\r\n      setError(new Error('Please select a country code'));\r\n      return;\r\n    }\r\n\r\n\r\n    if (!selectedCountry) {\r\n      setError(new Error('Please select a country code'));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Call the API to register the user\r\n      const response = await axios.post('http://localhost:8080/auth/signup', {\r\n        username: trimmedUsername,\r\n        email: trimmedEmail,\r\n        password: password,\r\n        first_name: trimmedFirstName,\r\n        last_name: trimmedLastName,\r\n        phone: `${phoneCode}${trimmedPhone}`,\r\n        address: trimmedAdress,\r\n      });\r\n\r\n      console.log('Signup successful:', response.data);\r\n      console.log(`+${phoneCode}${trimmedPhone}`)\r\n\r\n      Cookies.set('token', response.data.token);\r\n      // Get customerId by making a GET request to /customers\r\n      const customersResponse = await axios.get('http://localhost:8080/customers', {\r\n        headers: {\r\n          Authorization: `Bearer ${response.data.token}`, // Use the token from the signup response\r\n        },\r\n      });\r\n\r\n      // Find the customer with the matching username\r\n      const customerWithMatchingUsername = customersResponse.data.find(\r\n        (customer) => customer.username === trimmedUsername\r\n      );\r\n\r\n      if (!customerWithMatchingUsername) {\r\n        // If the user with the entered username is not found\r\n        setError(new Error('User with the entered username not found'));\r\n        return;\r\n      }\r\n\r\n      // Now you have the user ID of the customer being registered\r\n      const userId = customerWithMatchingUsername.id;\r\n\r\n      // Create an account using userId\r\n      const accountData = {\r\n        date: new Date().toISOString(),\r\n        customerId: userId,\r\n        transactionRoundingPercentage: 0,\r\n      };\r\n\r\n      const accountResponse = await axios.post('http://localhost:8080/accounts', accountData, {\r\n        headers: {\r\n          Authorization: `Bearer ${response.data.token}`, // Use the token from the signup response\r\n        },\r\n      });\r\n\r\n      console.log('Account created:', accountResponse.data);\r\n\r\n      // Redirect to the login page after successful signup\r\n      navigate('/');\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setError(new Error(error.response.data)); // Set the error message from the server response\r\n      } else {\r\n        setError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>Sign Up</h2>\r\n      {error && <p className={styles.error_message}>Произошла ошибка: {error.message}</p>}\r\n      <form className={styles.form} onSubmit={handleSignup}>\r\n        <div className={styles.form_group}>\r\n          <label className={styles.form_label}>\r\n            Username:\r\n            <input\r\n              className={styles.form_input}\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Confirm Password:\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            First Name:\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Last Name:\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={`${styles.form_group} ${styles.phoneWrapper}`}>\r\n          <label className={styles.form_label}>\r\n            Phone:\r\n            <div className={styles.phoneWrapper}>\r\n              <select\r\n                className={styles.form_select}\r\n                value={selectedCountry ? selectedCountry.phoneCode : ''}\r\n                onChange={(e) => {\r\n                  const phoneCode = e.target.value;\r\n                  setSelectedCountry(\r\n                    countryCodes.find((country) => country.phoneCode === phoneCode)\r\n                  );\r\n                  setPhoneCode(phoneCode); // Обновляем выбранный код страны\r\n                }}\r\n              >\r\n                <option value=\"\">Select option</option>\r\n                {countryCodes.map((country) => (\r\n                  <option key={country.phoneCode} value={country.phoneCode}>\r\n                    {selectedCountry && selectedCountry.phoneCode === country.phoneCode\r\n                      ? ` (+${country.phoneCode})`\r\n                      : `${country.name} (+${country.phoneCode})`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <input\r\n                className={styles.form_input}\r\n                type=\"text\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Address:\r\n            <input\r\n              type=\"text\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button className={styles.form_button} type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\BankPages\\MainPage.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\LeftSideLogin\\LeftSideLogin.js",["119","120"],[],"import React from \"react\";\r\nimport styles from './LeftSideLogin.module.css';\r\nimport logingCardLogo from '../../images/logo/logo.jpg'\r\nimport logo1 from '../../images/logo/logo1.jpg'\r\nimport logo2 from '../../images/logo/logo2.jpg'\r\nimport logo3 from '../../images/logo/logo3.jpg'\r\nimport logo4 from '../../images/logo/logo4.jpg'\r\nimport logo5 from '../../images/logo/logo5.jpg'\r\nimport logo6 from '../../images/logo/logo6.jpg'\r\nimport logo7 from '../../images/logo/logo7.jpg'\r\nimport logo8 from '../../images/logo/logo8.jpg'\r\nimport logo9 from '../../images/logo/logo9.jpg'\r\nimport logo10 from '../../images/logo/logo10.jpg'\r\nimport logo11 from '../../images/logo/logo11.jpg'\r\nimport logo12 from '../../images/logo/logo12.jpg'\r\n\r\n\r\n\r\nconst LeftSideLogin = () => {\r\n    return(\r\n        <div className={styles.leftSideLoginWrapper}>\r\n            <div className={styles.wrapperForCard}>\r\n                <img className={styles.log} src={logo12} alt=\"xuy\"></img>\r\n                <h1>Diagrams changed my life!</h1>\r\n                <p>Meet our talented backend web developer for the banking system! With a passion for cutting-edge technology and a keen eye for detail, they play a pivotal role in ensuring the smooth and secure functioning of our web-based banking platform. Armed with a deep understanding of programming languages and frameworks </p>\r\n                <div className={styles.signWrap}>\r\n                <span>Denis Durbalov &nbsp;(Backender, Springboy)</span>\r\n                <span>Quote: \"Backend - it`s my life\"</span>\r\n                </div>\r\n            </div>\r\n            <div className={styles.footer}>\r\n                <h1>Trusted by</h1>\r\n                <div className={styles.footerWrapper}>\r\n                    <img className={styles.trustedBy} src={logo1} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo2} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo3} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo4} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo5} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo6} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo7} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo8} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo9} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo11} alt=\"xut\"></img>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSideLogin;","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\RightSideLogin\\RightSideLogin.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\TotalBalance\\TotalBalance.js",["121","122","123","124"],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\BodyWrap.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\MarketButtons\\MarketButtons.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Modal\\Module.js",["125"],[],{"ruleId":"126","severity":1,"message":"127","line":10,"column":10,"nodeType":"128","messageId":"129","endLine":10,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":18,"column":10,"nodeType":"128","messageId":"129","endLine":18,"endColumn":19},{"ruleId":"126","severity":1,"message":"131","line":20,"column":9,"nodeType":"128","messageId":"129","endLine":20,"endColumn":21},{"ruleId":"126","severity":1,"message":"132","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":15},{"ruleId":"126","severity":1,"message":"133","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"134","line":21,"column":10,"nodeType":"128","messageId":"129","endLine":21,"endColumn":16},{"ruleId":"126","severity":1,"message":"135","line":21,"column":18,"nodeType":"128","messageId":"129","endLine":21,"endColumn":27},{"ruleId":"126","severity":1,"message":"136","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":22},{"ruleId":"126","severity":1,"message":"137","line":13,"column":8,"nodeType":"128","messageId":"129","endLine":13,"endColumn":14},{"ruleId":"126","severity":1,"message":"138","line":11,"column":18,"nodeType":"128","messageId":"129","endLine":11,"endColumn":27},{"ruleId":"126","severity":1,"message":"139","line":12,"column":20,"nodeType":"128","messageId":"129","endLine":12,"endColumn":31},{"ruleId":"126","severity":1,"message":"140","line":13,"column":22,"nodeType":"128","messageId":"129","endLine":13,"endColumn":35},{"ruleId":"126","severity":1,"message":"141","line":14,"column":22,"nodeType":"128","messageId":"129","endLine":14,"endColumn":35},{"ruleId":"142","severity":1,"message":"143","line":20,"column":8,"nodeType":"144","endLine":20,"endColumn":10,"suggestions":"145"},"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'isOnLastCard' is assigned a value but never used.","'Cookies' is defined but never used.","'useEffect' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'logingCardLogo' is defined but never used.","'logo10' is defined but never used.","'setIncome' is assigned a value but never used.","'setExpenses' is assigned a value but never used.","'setPercentage' is assigned a value but never used.","'setIsPositive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleOutsideClick'. Either include it or remove the dependency array.","ArrayExpression",["146"],{"desc":"147","fix":"148"},"Update the dependencies array to be: [handleOutsideClick]",{"range":"149","text":"150"},[618,620],"[handleOutsideClick]"]