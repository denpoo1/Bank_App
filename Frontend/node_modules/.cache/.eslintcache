[{"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\index.js":"1","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\App.js":"3","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\Login.js":"4","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\SignUp.js":"5","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\BankPages\\MainPage.js":"6","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Portfolio\\Portfolio.js":"7","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Portfolio\\PortfolioPage.js":"8","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\RightSideLogin\\RightSideLogin.js":"9","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\LeftSideLogin\\LeftSideLogin.js":"10","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Sidebar.js":"11","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Body\\Body.js":"12","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Header\\Header.js":"13","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarNavigation.js":"14","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarFooter.js":"15","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Logo.js":"16","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\Wrap.js":"17","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\BodyWrap.js":"18","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Modal\\Module.js":"19","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Currency\\Currency.js":"20","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Card\\Card.js":"21","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\TotalBalance\\TotalBalance.js":"22","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\MarketButtons\\MarketButtons.js":"23","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Transactions\\Transaction.js":"24","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Transactions\\TransactionPage.js":"25"},{"size":552,"mtime":1690979537277,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1690383299987,"results":"28","hashOfConfig":"27"},{"size":757,"mtime":1692924153140,"results":"29","hashOfConfig":"27"},{"size":390,"mtime":1692279413063,"results":"30","hashOfConfig":"27"},{"size":9112,"mtime":1692279413074,"results":"31","hashOfConfig":"27"},{"size":388,"mtime":1692401010664,"results":"32","hashOfConfig":"27"},{"size":332,"mtime":1692566249989,"results":"33","hashOfConfig":"27"},{"size":8728,"mtime":1693011680821,"results":"34","hashOfConfig":"27"},{"size":2708,"mtime":1692811866725,"results":"35","hashOfConfig":"27"},{"size":2685,"mtime":1691767369656,"results":"36","hashOfConfig":"27"},{"size":437,"mtime":1690383299976,"results":"37","hashOfConfig":"27"},{"size":2392,"mtime":1692819504441,"results":"38","hashOfConfig":"27"},{"size":4464,"mtime":1692924314182,"results":"39","hashOfConfig":"27"},{"size":1856,"mtime":1692565961090,"results":"40","hashOfConfig":"27"},{"size":648,"mtime":1690383299976,"results":"41","hashOfConfig":"27"},{"size":423,"mtime":1690383299975,"results":"42","hashOfConfig":"27"},{"size":219,"mtime":1690383299979,"results":"43","hashOfConfig":"27"},{"size":229,"mtime":1691767369777,"results":"44","hashOfConfig":"27"},{"size":1420,"mtime":1692650910367,"results":"45","hashOfConfig":"27"},{"size":2247,"mtime":1691767369648,"results":"46","hashOfConfig":"27"},{"size":7633,"mtime":1693011044137,"results":"47","hashOfConfig":"27"},{"size":5397,"mtime":1692923955939,"results":"48","hashOfConfig":"27"},{"size":14097,"mtime":1692823015292,"results":"49","hashOfConfig":"27"},{"size":342,"mtime":1692924114467,"results":"50","hashOfConfig":"27"},{"size":8508,"mtime":1693100520597,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"rnshr0",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"55"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"55"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\index.js",[],[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\App.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\Login.js",["135"],[],"import styles from './Login.module.css'\r\nimport LeftSideLogin from './LeftSideLogin/LeftSideLogin';\r\nimport RightSideLogin from './RightSideLogin/RightSideLogin';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nconst Login = () => {\r\n  \r\n\r\n  return (\r\n    <div className={styles.loginWrapper}>\r\n      <LeftSideLogin />\r\n      <RightSideLogin />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\SignUp.js",["136","137","138"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './Signup.module.css';\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nconst Signup = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [phoneCode, setPhoneCode] = useState(''); // State for the selected country code\r\n  const [phone, setPhone] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n\r\n\r\n  const countryCodes = [\r\n    { phoneCode: '1', name: 'United States', countryCode: 'US', img: './images/x' },\r\n    { phoneCode: '91', name: 'India', countryCode: 'IN' },\r\n    { phoneCode: '44', name: 'United Kingdom', countryCode: 'UK' },\r\n    // Add more country codes as needed\r\n  ];\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const trimmedUsername = username.trim();\r\n    const trimmedEmail = email.trim();\r\n    const trimmedFirstName = firstName.trim();\r\n    const trimmedLastName = lastName.trim();\r\n    const trimmedPhone = phone.trim();\r\n    const trimmedAdress = address.trim();\r\n\r\n    // Validate required fields\r\n    if (!trimmedUsername || !trimmedEmail || !trimmedFirstName || !trimmedLastName || !trimmedPhone || !trimmedAdress) {\r\n      setError(new Error('Please fill in all required fields'));\r\n      return;\r\n    }\r\n    // Validate passwords\r\n    if (password !== confirmPassword) {\r\n      setError(new Error('Passwords do not match'));\r\n      return;\r\n    }\r\n\r\n    // Validate username (only Latin characters allowed)\r\n    const usernameRegex = /^[a-zA-Z0-9_]+$/;\r\n    if (!username.match(usernameRegex)) {\r\n      setError(new Error('Username should only contain Latin characters, numbers, and underscores'));\r\n      return;\r\n    }\r\n\r\n    if (username.length > 10) {\r\n      setError(new Error('Username should not be longer than 10 characters'));\r\n      return;\r\n    }\r\n\r\n    // Validate email format\r\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\r\n    if (!email.match(emailRegex)) {\r\n      setError(new Error('Invalid email format'));\r\n      return;\r\n    }\r\n\r\n    const phoneNumberRegex = /^\\d+$/;\r\n    if (!trimmedPhone.match(phoneNumberRegex)) {\r\n      setError(new Error('Phone number should contain only numbers'));\r\n      return;\r\n    }\r\n\r\n    if (!selectedCountry) {\r\n      setError(new Error('Please select a country code'));\r\n      return;\r\n    }\r\n\r\n\r\n    if (!selectedCountry) {\r\n      setError(new Error('Please select a country code'));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Call the API to register the user\r\n      const response = await axios.post('http://localhost:8080/auth/signup', {\r\n        username: trimmedUsername,\r\n        email: trimmedEmail,\r\n        password: password,\r\n        first_name: trimmedFirstName,\r\n        last_name: trimmedLastName,\r\n        phone: `${phoneCode}${trimmedPhone}`,\r\n        address: trimmedAdress,\r\n      });\r\n\r\n      console.log('Signup successful:', response.data);\r\n      console.log(`+${phoneCode}${trimmedPhone}`)\r\n\r\n      Cookies.set('token', response.data.token);\r\n      // Get customerId by making a GET request to /customers\r\n      const customersResponse = await axios.get('http://localhost:8080/customers', {\r\n        headers: {\r\n          Authorization: `Bearer ${response.data.token}`, // Use the token from the signup response\r\n        },\r\n      });\r\n\r\n      // Find the customer with the matching username\r\n      const customerWithMatchingUsername = customersResponse.data.find(\r\n        (customer) => customer.username === trimmedUsername\r\n      );\r\n\r\n      if (!customerWithMatchingUsername) {\r\n        // If the user with the entered username is not found\r\n        setError(new Error('User with the entered username not found'));\r\n        return;\r\n      }\r\n\r\n      // Now you have the user ID of the customer being registered\r\n      const userId = customerWithMatchingUsername.id;\r\n\r\n      // Create an account using userId\r\n      const accountData = {\r\n        date: new Date().toISOString(),\r\n        customerId: userId,\r\n        transactionRoundingPercentage: 0,\r\n      };\r\n\r\n      const accountResponse = await axios.post('http://localhost:8080/accounts', accountData, {\r\n        headers: {\r\n          Authorization: `Bearer ${response.data.token}`, // Use the token from the signup response\r\n        },\r\n      });\r\n\r\n      console.log('Account created:', accountResponse.data);\r\n\r\n      // Redirect to the login page after successful signup\r\n      navigate('/');\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setError(new Error(error.response.data)); // Set the error message from the server response\r\n      } else {\r\n        setError(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>Sign Up</h2>\r\n      {error && <p className={styles.error_message}>Произошла ошибка: {error.message}</p>}\r\n      <form className={styles.form} onSubmit={handleSignup}>\r\n        <div className={styles.form_group}>\r\n          <label className={styles.form_label}>\r\n            Username:\r\n            <input\r\n              className={styles.form_input}\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Confirm Password:\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            First Name:\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Last Name:\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={`${styles.form_group} ${styles.phoneWrapper}`}>\r\n          <label className={styles.form_label}>\r\n            Phone:\r\n            <div className={styles.phoneWrapper}>\r\n              <select\r\n                className={styles.form_select}\r\n                value={selectedCountry ? selectedCountry.phoneCode : ''}\r\n                onChange={(e) => {\r\n                  const phoneCode = e.target.value;\r\n                  setSelectedCountry(\r\n                    countryCodes.find((country) => country.phoneCode === phoneCode)\r\n                  );\r\n                  setPhoneCode(phoneCode); // Обновляем выбранный код страны\r\n                }}\r\n              >\r\n                <option value=\"\">Select option</option>\r\n                {countryCodes.map((country) => (\r\n                  <option key={country.phoneCode} value={country.phoneCode}>\r\n                    {selectedCountry && selectedCountry.phoneCode === country.phoneCode\r\n                      ? ` (+${country.phoneCode})`\r\n                      : `${country.name} (+${country.phoneCode})`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <input\r\n                className={styles.form_input}\r\n                type=\"text\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div className={styles.form_group}>\r\n          <label>\r\n            Address:\r\n            <input\r\n              type=\"text\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button className={styles.form_button} type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\BankPages\\MainPage.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Portfolio\\Portfolio.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Portfolio\\PortfolioPage.js",["139","140"],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\RightSideLogin\\RightSideLogin.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Login\\LeftSideLogin\\LeftSideLogin.js",["141","142"],[],"import React from \"react\";\r\nimport styles from './LeftSideLogin.module.css';\r\nimport logingCardLogo from '../../images/logo/logo.jpg'\r\nimport logo1 from '../../images/logo/logo1.jpg'\r\nimport logo2 from '../../images/logo/logo2.jpg'\r\nimport logo3 from '../../images/logo/logo3.jpg'\r\nimport logo4 from '../../images/logo/logo4.jpg'\r\nimport logo5 from '../../images/logo/logo5.jpg'\r\nimport logo6 from '../../images/logo/logo6.jpg'\r\nimport logo7 from '../../images/logo/logo7.jpg'\r\nimport logo8 from '../../images/logo/logo8.jpg'\r\nimport logo9 from '../../images/logo/logo9.jpg'\r\nimport logo10 from '../../images/logo/logo10.jpg'\r\nimport logo11 from '../../images/logo/logo11.jpg'\r\nimport logo12 from '../../images/logo/logo12.jpg'\r\n\r\n\r\n\r\nconst LeftSideLogin = () => {\r\n    return(\r\n        <div className={styles.leftSideLoginWrapper}>\r\n            <div className={styles.wrapperForCard}>\r\n                <img className={styles.log} src={logo12} alt=\"xuy\"></img>\r\n                <h1>Diagrams changed my life!</h1>\r\n                <p>Meet our talented backend web developer for the banking system! With a passion for cutting-edge technology and a keen eye for detail, they play a pivotal role in ensuring the smooth and secure functioning of our web-based banking platform. Armed with a deep understanding of programming languages and frameworks </p>\r\n                <div className={styles.signWrap}>\r\n                <span>Denis Durbalov &nbsp;(Backender, Springboy)</span>\r\n                <span>Quote: \"Backend - it`s my life\"</span>\r\n                </div>\r\n            </div>\r\n            <div className={styles.footer}>\r\n                <h1>Trusted by</h1>\r\n                <div className={styles.footerWrapper}>\r\n                    <img className={styles.trustedBy} src={logo1} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo2} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo3} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo4} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo5} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo6} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo7} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo8} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo9} alt=\"xut\"></img>\r\n                    <img className={styles.trustedBy} src={logo11} alt=\"xut\"></img>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSideLogin;","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Sidebar.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Body\\Body.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Header\\Header.js",["143","144"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styles from './Header.module.css';\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Header = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n  const [username, setUsername] = useState(\"\"); // Добавили состояние для хранения юзернейма\r\n  const [userData, setUserData] = useState(null); // Добавили состояние для хранения данных пользователя\r\n  const [userImg, setUserImg] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    const userName = Cookies.get('username');\r\n\r\n    // Здесь вам нужно выполнить проверку токена и вернуть путь к соответствующей картинке\r\n    if (userName === \"liza\") {\r\n      console.log(\"qwe\");\r\n      setUserImg('../images/logo/liza.jpg');\r\n    } \r\n\r\n    // Получаем токен из куки\r\n    const tokenFromCookie = Cookies.get(\"token\");\r\n    if (tokenFromCookie) {\r\n      // Выполняем GET-запрос для получения данных пользователя\r\n      axios\r\n        .get(\"http://localhost:8080/customers\", {\r\n          headers: {\r\n            Authorization: `Bearer ${tokenFromCookie}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n\r\n          // Получаем массив аккаунтов\r\n          const accounts = response.data;\r\n\r\n          // Получаем сохраненный юзернейм из куки\r\n          const savedUsername = Cookies.get(\"username\");\r\n\r\n          // Ищем аккаунт с совпадающим юзернеймом\r\n          const matchedAccount = accounts.find(\r\n            (account) => account.username === savedUsername\r\n          );\r\n\r\n          if (matchedAccount) {\r\n            // Если нашли аккаунт с совпадающим юзернеймом, сохраняем айди юзера и обновляем юзернейм\r\n            setUserId(matchedAccount.id);\r\n            setUsername(savedUsername); // Обновляем состояние с юзернеймом\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user data:\", error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Получаем токен из куки\r\n    const tokenFromCookie = Cookies.get(\"token\");\r\n\r\n    if (tokenFromCookie && userId) {\r\n      // Выполняем GET-запрос для получения данных пользователя по его идентификатору\r\n      axios\r\n        .get(`http://localhost:8080/customers/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${tokenFromCookie}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          // Устанавливаем данные пользователя в состояние\r\n          setUserData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user data:\", error);\r\n        });\r\n    }\r\n  }, [userId]); // Эффект срабатывает при изменении userId\r\n\r\n  return (\r\n    <div className={styles.header}>\r\n      <h1 className={styles.headerTitle}>Wallet</h1>\r\n      <div className={styles.headerWrapper}>\r\n        <div className={styles.headerSearchWrapper}>\r\n          <button className={styles.search}></button>\r\n          <button className={styles.notification}></button>\r\n        </div>\r\n        <div className={`${styles.profileButtonWrapper} ${isMenuOpen ? styles.activeDropdown : \"\"}`}>\r\n          <button className={styles.profileButton} onClick={toggleMenu}>\r\n            {/* <img className={styles.userLogo} alt=\"we\" src={userImg} /> */}\r\n            <span className={styles.username}>{username}</span>\r\n            <span className={styles.dropdownIcon}>{isMenuOpen ? \"▲\" : \"▼\"}</span>\r\n          </button>\r\n          {isMenuOpen && (\r\n            <div className={`${styles.dropdown}`}>\r\n              <div className={styles.option}>Denis</div>\r\n              <div className={styles.option}>Polnyi</div>\r\n              <div className={styles.option}>Lox</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarNavigation.js",["145"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport styles from \"./SidebarNavigation.module.css\";\r\n\r\nconst SidebarNavigation = () => {\r\n  const [activeButtonIndex, setActiveButtonIndex] = useState(-1);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Обновляем активную кнопку при изменении пути\r\n  useEffect(() => {\r\n    const activeIndex = mainButtons.findIndex(\r\n      (button) =>\r\n        (button.index === 0 && location.pathname === \"/\") ||\r\n        location.pathname.includes(button.text.toLowerCase())\r\n    );\r\n\r\n    setActiveButtonIndex(activeIndex);\r\n  }, [location]);\r\n\r\n  const handleButtonClick = (index) => {\r\n    if (activeButtonIndex === index) {\r\n      return;\r\n    }\r\n\r\n    const newPath = mainButtons[index].index === 10 ? \"/\" : `/${mainButtons[index].text.toLowerCase()}-page`;\r\n    navigate(newPath);\r\n\r\n    setActiveButtonIndex(index);\r\n  };\r\n\r\n  const mainButtons = [\r\n    { text: \"Home\", style: styles.home, index: 0 },\r\n    { text: \"Transaction\", style: styles.trans, index: 1 },\r\n    { text: \"Portfolio\", style: styles.port, index: 2 },\r\n    { text: \"Wallet\", style: styles.wallet, index: 3 },\r\n  ];\r\n\r\n  return (\r\n    <div className={`${styles.navigation} ${styles.navigationSeparator}`}>\r\n      {mainButtons.map((button, index) => (\r\n        <div\r\n          key={index}\r\n          className={`${styles.wrapForElement} ${\r\n            activeButtonIndex === index ? styles.clicked : \"\"\r\n          }`}\r\n        >\r\n          <button\r\n            className={`${styles.button} ${button.style}`}\r\n            onClick={() => handleButtonClick(index)}\r\n          >\r\n            {button.text}\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarNavigation;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\SidebarFooter.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Sidebar\\Logo.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\Wrap.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Wrap\\BodyWrap.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Modal\\Module.js",["146"],[],"import React, { useRef, useEffect } from 'react';\r\nimport modalStyles from './Modal.module.css';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\n\r\nconst Modal = ({ children, onClose, className, clasName }) => {\r\n    const modalRef = useRef(null);\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (modalRef.current && !modalRef.current.contains(e.target)) {\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const modalAnimation = useSpring({\r\n        from: { opacity: 0, transform: 'scale(0.8)' },\r\n        to: { opacity: 1, transform: 'scale(1)' },\r\n    });\r\n\r\n    return (\r\n        <div className={`${modalStyles['modal-overlay']} ${className}`}>\r\n            <div className={`${modalStyles['dark-layer']}`} />\r\n            <animated.div className={`${modalStyles['modal-content']} ${clasName}`} style={modalAnimation} ref={modalRef}>\r\n                <span\r\n                    className={`${modalStyles['close-button']} ${modalStyles['close-button-right']}`}\r\n                    onClick={onClose}\r\n                >\r\n                    &#10006;\r\n                </span>\r\n                {children}\r\n            </animated.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Currency\\Currency.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Card\\Card.js",["147","148","149","150"],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\TotalBalance\\TotalBalance.js",["151"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TotalBalance.module.css\";\r\nimport Wrap from \"../Wrap/Wrap\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nconst TotalBalance = ({ cardId }) => {\r\n  const [customerId, setId] = useState(null)\r\n  const [balance, setBalance] = useState(0);\r\n  const [income, setIncome] = useState(0);\r\n  const [expenses, setExpenses] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [isPositive, setIsPositive] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const username = Cookies.get('username');\r\n    const token = Cookies.get('token');\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n  \r\n    axios.get('http://localhost:8080/customers', { headers }).then((res) => {\r\n      const matchingUser = res.data.find(arr => arr.username === username);\r\n      if (matchingUser) {\r\n        setId(matchingUser.id);\r\n      }\r\n    }).catch(error => {\r\n      console.error('Error fetching customer data', error);\r\n    });\r\n  \r\n    axios.get('http://localhost:8080/accounts', { headers }).then((res) => {\r\n      const accounts = res.data; // Получаем массив всех аккаунтов\r\n  \r\n      // Проходим по каждому аккаунту и сравниваем customerId\r\n      accounts.forEach(account => {\r\n        if (account.customerId === customerId) {\r\n          console.log('Matching customerId found! Account id:', account.id);\r\n          if (customerId != null) {\r\n            axios.get(`http://localhost:8080/accounts/${account.id}/transaction`, { headers }).then((res) => {\r\n              console.log(res.data);\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }).catch(error => {\r\n      console.error('Error fetching accounts data', error);\r\n    });\r\n\r\n\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n    axios.get(`http://localhost:8080/transactions`, { headers }) // Запрос транзакций\r\n      .then(response => {\r\n        const transactions = response.data;\r\n\r\n        const incomeExpensesMap = {}; // Объект для хранения доходов и расходов по картам\r\n\r\n        transactions.forEach(transaction => {\r\n          const { fromCardId, toCardId, amount } = transaction;\r\n\r\n          if (!incomeExpensesMap[fromCardId]) {\r\n            incomeExpensesMap[fromCardId] = { income: 0, expenses: 0 };\r\n          }\r\n          if (!incomeExpensesMap[toCardId]) {\r\n            incomeExpensesMap[toCardId] = { income: 0, expenses: 0 };\r\n          }\r\n\r\n          incomeExpensesMap[fromCardId].expenses += amount; // Увеличение расходов\r\n          incomeExpensesMap[toCardId].income += amount;     // Увеличение доходов\r\n        });\r\n\r\n        // Обновление состояний income и expenses для текущей карты\r\n        setIncome(incomeExpensesMap[cardId]?.income || 0);\r\n        setExpenses(incomeExpensesMap[cardId]?.expenses || 0);\r\n\r\n        const calculatedIncome = incomeExpensesMap[cardId]?.income || 0;\r\n        const calculatedExpenses = incomeExpensesMap[cardId]?.expenses || 0;\r\n        const calculatedPercentage = calculatedExpenses === 0 ? calculatedIncome * 100 : (calculatedIncome - calculatedExpenses) / calculatedExpenses * 100;\r\n        console.log(calculatedPercentage)\r\n        console.log(isPositive)\r\n        setPercentage(calculatedPercentage);\r\n        setIsPositive(calculatedPercentage >= 0);\r\n      })\r\n      .catch(error => {\r\n        console.error('Произошла ошибка при получении данных о транзакциях', error);\r\n      });\r\n  }, [cardId]);\r\n\r\n  useEffect(() => {\r\n    const token = Cookies.get('token');\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`\r\n    };\r\n\r\n\r\n\r\n\r\n    axios.get(`http://localhost:8080/credit-cards/${cardId}`, { headers })\r\n      .then(response => {\r\n        const cardData = response.data;\r\n\r\n        setBalance(cardData.balance);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error('Произошла ошибка при получении данных о балансе', error);\r\n      });\r\n  }, [cardId, customerId]);\r\n\r\n  return (\r\n    <Wrap className={styles.wrapperTotalBAlance}>\r\n      {/* Your other content */}\r\n      <h1 className={styles.amountTitle}>Balance</h1>\r\n      <div className={styles.amountWrapper}>\r\n        <span className={styles.amount}>\r\n        €{balance.toFixed(2)}\r\n        </span>\r\n        <div\r\n          className={styles.amountPercentageWrapper}\r\n          style={{\r\n            backgroundColor: isPositive\r\n              ? percentage > 0\r\n                ? \"#07f8b5\"\r\n                : \"#b3b3b3\"\r\n              : \"#FE0738\",\r\n          }}\r\n        >\r\n          {percentage !== 0 ? ( // Conditionally render the triangle when percentage is not 0\r\n            <span className={styles.triangle}>\r\n              {isPositive ? <>&#9650;</> : <>&#9660;</>}\r\n            </span>\r\n          ) : null}\r\n          <span className={styles.amountPercentage}>\r\n            {Math.abs(percentage).toFixed(2) + \"%\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className={styles.spendingsWrapper}>\r\n        <span className={styles.income}>${income}</span>\r\n        <span className={styles.expenses}>${expenses}</span>\r\n      </div>\r\n    </Wrap>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default TotalBalance;\r\n","C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\MarketButtons\\MarketButtons.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Transactions\\Transaction.js",[],[],"C:\\Users\\Илья\\Desktop\\Bank_App\\Frontend\\src\\Transactions\\TransactionPage.js",["152","153","154"],[],{"ruleId":"155","severity":1,"message":"156","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":15},{"ruleId":"155","severity":1,"message":"159","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"160","line":21,"column":10,"nodeType":"157","messageId":"158","endLine":21,"endColumn":16},{"ruleId":"155","severity":1,"message":"161","line":21,"column":18,"nodeType":"157","messageId":"158","endLine":21,"endColumn":27},{"ruleId":"155","severity":1,"message":"162","line":9,"column":10,"nodeType":"157","messageId":"158","endLine":9,"endColumn":19},{"ruleId":"155","severity":1,"message":"163","line":12,"column":10,"nodeType":"157","messageId":"158","endLine":12,"endColumn":20},{"ruleId":"155","severity":1,"message":"164","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":22},{"ruleId":"155","severity":1,"message":"165","line":13,"column":8,"nodeType":"157","messageId":"158","endLine":13,"endColumn":14},{"ruleId":"155","severity":1,"message":"166","line":10,"column":10,"nodeType":"157","messageId":"158","endLine":10,"endColumn":18},{"ruleId":"155","severity":1,"message":"167","line":11,"column":10,"nodeType":"157","messageId":"158","endLine":11,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":19,"column":6,"nodeType":"170","endLine":19,"endColumn":16,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":20,"column":8,"nodeType":"170","endLine":20,"endColumn":10,"suggestions":"173"},{"ruleId":"155","severity":1,"message":"174","line":18,"column":10,"nodeType":"157","messageId":"158","endLine":18,"endColumn":19},{"ruleId":"155","severity":1,"message":"175","line":20,"column":9,"nodeType":"157","messageId":"158","endLine":20,"endColumn":21},{"ruleId":"155","severity":1,"message":"176","line":22,"column":10,"nodeType":"157","messageId":"158","endLine":22,"endColumn":24},{"ruleId":"155","severity":1,"message":"177","line":22,"column":26,"nodeType":"157","messageId":"158","endLine":22,"endColumn":43},{"ruleId":"168","severity":1,"message":"178","line":94,"column":6,"nodeType":"170","endLine":94,"endColumn":14,"suggestions":"179"},{"ruleId":"155","severity":1,"message":"180","line":13,"column":12,"nodeType":"157","messageId":"158","endLine":13,"endColumn":23},{"ruleId":"155","severity":1,"message":"181","line":14,"column":12,"nodeType":"157","messageId":"158","endLine":14,"endColumn":20},{"ruleId":"155","severity":1,"message":"182","line":14,"column":22,"nodeType":"157","messageId":"158","endLine":14,"endColumn":33},"no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'useSpring' is defined but never used.","'customerId' is assigned a value but never used.","'logingCardLogo' is defined but never used.","'logo10' is defined but never used.","'userData' is assigned a value but never used.","'userImg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mainButtons'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has a missing dependency: 'handleOutsideClick'. Either include it or remove the dependency array.",["184"],"'isLoading' is assigned a value but never used.","'isOnLastCard' is assigned a value but never used.","'isLoadingCards' is assigned a value but never used.","'setIsLoadingCards' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customerId' and 'isPositive'. Either include them or remove the dependency array.",["185"],"'currentPage' is assigned a value but never used.","'prevDate' is assigned a value but never used.","'setPrevDate' is assigned a value but never used.",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [location, mainButtons]",{"range":"192","text":"193"},"Update the dependencies array to be: [handleOutsideClick]",{"range":"194","text":"195"},"Update the dependencies array to be: [cardId, customerId, isPositive]",{"range":"196","text":"197"},[664,674],"[location, mainButtons]",[628,630],"[handleOutsideClick]",[3415,3423],"[cardId, customerId, isPositive]"]